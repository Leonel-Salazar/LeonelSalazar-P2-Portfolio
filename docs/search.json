[
  {
    "objectID": "tidytuesday-exercise/tidytuesday-exercise.html",
    "href": "tidytuesday-exercise/tidytuesday-exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "Placeholder file for the future Tidy Tuesday exercise."
  },
  {
    "objectID": "starter-analysis-exercise/results/readme.html",
    "href": "starter-analysis-exercise/results/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains results produced by the code, such as figures and tables.\nDepending on the size and type of your project, you can either place it all in a single folder or create sub-folders. For instance you could create a folder for figures, another for tables. Or you could create a sub-folder for dataset 1, another for dataset 2. Or you could have a subfolder for exploratory analysis, another for final analysis. The options are endless, choose whatever makes sense for your project. For this template, there is just a a single folder, but having sub-folders is often a good idea."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html",
    "title": "Manuscript",
    "section": "",
    "text": "The structure below is one possible setup for a data analysis project (including the course project). For a manuscript, adjust as needed. You don’t need to have exactly these sections, but the content covering those sections should be addressed.\nThis uses MS Word as output format. See here for more information. You can switch to other formats, like html or pdf. See the Quarto documentation for other formats.\nWarning: package 'here' was built under R version 4.3.3"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#general-background-information",
    "title": "Manuscript",
    "section": "General Background Information",
    "text": "General Background Information\nProvide enough background on your topic that others can understand the why and how of your analysis"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#description-of-data-and-data-source",
    "title": "Manuscript",
    "section": "Description of data and data source",
    "text": "Description of data and data source\nDescribe what the data is, what it contains, where it is from, etc. Eventually this might be part of a methods section."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#questionshypotheses-to-be-addressed",
    "title": "Manuscript",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\nState the research questions you plan to answer with this analysis.\nTo cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above (here dataanalysis_template_references.bib) and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in [@mckay2020; @mckay2020a]"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-aquisition",
    "title": "Manuscript",
    "section": "Data aquisition",
    "text": "Data aquisition\nAs applicable, explain where and how you got the data. If you directly import the data from an online source, you can combine this section with the next."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#data-import-and-cleaning",
    "title": "Manuscript",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\nWrite code that reads in the file and cleans it so it’s ready for analysis. Since this will be fairly long code for most datasets, it might be a good idea to have it in one or several R scripts. If that is the case, explain here briefly what kind of cleaning/processing you do, and provide more details and well documented code somewhere (e.g. as supplement in a paper). All materials, including files that contain code, should be commented well so everyone can follow along."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#statistical-analysis",
    "title": "Manuscript",
    "section": "Statistical analysis",
    "text": "Statistical analysis\nExplain anything related to your statistical analyses."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#exploratorydescriptive-analysis",
    "title": "Manuscript",
    "section": "Exploratory/Descriptive analysis",
    "text": "Exploratory/Descriptive analysis\nUse a combination of text/tables/figures to explore and describe your data. Show the most important descriptive results here. Additional ones should go in the supplement. Even more can be in the R and Quarto files that are part of your project.\nTable 1 shows a summary of the data.\nNote the loading of the data providing a relative path using the ../../ notation. (Two dots means a folder up). You never want to specify an absolute path like C:\\ahandel\\myproject\\results\\ because if you share this with someone, it won’t work for them since they don’t have that path. You can also use the here R package to create paths. See examples of that below. I recommend the here package, but I’m showing the other approach here just in case you encounter it.\n\n\n\n\nTable 1: Data summary table.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_type\nskim_variable\nn_missing\ncomplete_rate\nfactor.ordered\nfactor.n_unique\nfactor.top_counts\nnumeric.mean\nnumeric.sd\nnumeric.p0\nnumeric.p25\nnumeric.p50\nnumeric.p75\nnumeric.p100\nnumeric.hist\n\n\n\n\nfactor\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nNA\n\n\nnumeric\nHeight\n0\n1\nNA\nNA\nNA\n165.66667\n15.97655\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nnumeric\nWeight\n0\n1\nNA\nNA\nNA\n70.11111\n21.24526\n45\n55\n70\n80\n110\n▇▂▃▂▂"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#basic-statistical-analysis",
    "title": "Manuscript",
    "section": "Basic statistical analysis",
    "text": "Basic statistical analysis\nTo get some further insight into your data, if reasonable you could compute simple statistics (e.g. simple models with 1 predictor) to look for associations between your outcome(s) and each individual predictor variable. Though note that unless you pre-specified the outcome and main exposure, any “p&lt;0.05 means statistical significance” interpretation is not valid.\nFigure 1 shows a scatterplot figure produced by one of the R scripts.\n\n\n\n\n\n\n\n\nFigure 1: Height and weight stratified by gender."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#full-analysis",
    "title": "Manuscript",
    "section": "Full analysis",
    "text": "Full analysis\nUse one or several suitable statistical/machine learning methods to analyze your data and to produce meaningful figures, tables, etc. This might again be code that is best placed in one or several separate R scripts that need to be well documented. You want the code to produce figures and data ready for display as tables, and save those. Then you load them here.\nExample Table 2 shows a summary of a linear model fit.\n\n\n\n\nTable 2: Linear model fit table.\n\n\n\n\n\n\nterm\nestimate\nstd.error\nstatistic\np.value\n\n\n\n\n(Intercept)\n149.2726967\n23.3823360\n6.3839942\n0.0013962\n\n\nWeight\n0.2623972\n0.3512436\n0.7470519\n0.4886517\n\n\nGenderM\n-2.1244913\n15.5488953\n-0.1366329\n0.8966520\n\n\nGenderO\n-4.7644739\n19.0114155\n-0.2506112\n0.8120871"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#summary-and-interpretation",
    "title": "Manuscript",
    "section": "Summary and Interpretation",
    "text": "Summary and Interpretation\nSummarize what you did, what you found and what it means."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#strengths-and-limitations",
    "title": "Manuscript",
    "section": "Strengths and Limitations",
    "text": "Strengths and Limitations\nDiscuss what you perceive as strengths and limitations of your analysis."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "href": "starter-analysis-exercise/products/report/starter-analysis-report.html#conclusions",
    "title": "Manuscript",
    "section": "Conclusions",
    "text": "Conclusions\nWhat are the main take-home messages?\nInclude citations in your Rmd file using bibtex, the list of references will automatically be placed at the end\nThis paper [@leek2015] discusses types of analyses.\nThese papers [@mckay2020; @mckay2020a] are good examples of papers published using a fully reproducible setup similar to the one shown in this template.\nNote that this cited reference will show up at the end of the document, the reference formatting is determined by the CSL file specified in the YAML header. Many more style files for almost any journal are available. You also specify the location of your bibtex reference file in the YAML. You can call your reference file anything you like, I just used the generic word references.bib but giving it a more descriptive name is probably better."
  },
  {
    "objectID": "starter-analysis-exercise/data/readme.html",
    "href": "starter-analysis-exercise/data/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all data at various stages.\nThis data is being loaded/manipulated/changed/saved with code from the code folders.\nYou should place the raw data in the raw_data folder and not edit it. Ever!\nIdeally, load the raw data into R and do all changes there with code, so everything is automatically reproducible and documented.\nSometimes, you need to edit the files in the format you got. For instance, Excel files are sometimes so poorly formatted that it’s close to impossible to read them into R, or the persons you got the data from used color to code some information, which of course won’t import into R. In those cases, you might have to make modifications in a software other than R. If you need to make edits in whatever format you got the data (e.g. Excel), make a copy and place those copies in a separate folder, AND ONLY EDIT THOSE COPIES. Also, write down somewhere the edits you made.\nAdd as many sub-folders as suitable. If you only have a single processing step, one sub-folder for processed data is enough. If you have multiple stages of cleaning and processing, additional sub-folders might be useful. Adjust based on the complexity of your project.\nI suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata"
  },
  {
    "objectID": "starter-analysis-exercise/code/readme.html",
    "href": "starter-analysis-exercise/code/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "Place your various R or Quarto files in the appropriate folders.\nYou can either have fewer large scripts, or multiple scripts that do only specific actions. Those can be R or Quarto files. In either case, document the scripts and what goes on in them so well that someone else (including future you) can easily figure out what is happening.\nThe scripts should load the appropriate data (e.g. raw or processed), perform actions, and save results (e.g. processed data, figures, computed values) in the appropriate folders. Document somewhere what inputs each script takes and where output is placed.\nIf scripts need to be run in a specific order, document this. Either as comments in the script, or in a separate text file such as this readme file. Ideally of course in both locations.\nDepending on your specific project, you might want to have further folders/sub-folders."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "href": "starter-analysis-exercise/code/processing-code/processingfile.html",
    "title": "An example cleaning script",
    "section": "",
    "text": "Processing script\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\nSetup\nLoad needed packages. make sure they are installed.\n\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n\nhere() starts at C:/Data/Github/andreashandel/online-portfolio-template\n\n\n\n\nData loading\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so: package::function() that’s not required one could just call the function specifying the package makes it clearer where the function “lives”, but it adds typing. You can do it either way.\n\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata.xlsx\")\nrawdata &lt;- readxl::read_excel(data_location)\n\n\n\nCheck data\nFirst we can look at the codebook\n\ncodebook &lt;- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n\n# A tibble: 3 × 3\n  `Variable Name` `Variable Definition`                 `Allowed Values`      \n  &lt;chr&gt;           &lt;chr&gt;                                 &lt;chr&gt;                 \n1 Height          height in centimeters                 numeric value &gt;0 or NA\n2 Weight          weight in kilograms                   numeric value &gt;0 or NA\n3 Gender          identified gender (male/female/other) M/F/O/NA              \n\n\nSeveral ways of looking at the data\n\ndplyr::glimpse(rawdata)\n\nRows: 14\nColumns: 3\n$ Height &lt;chr&gt; \"180\", \"175\", \"sixty\", \"178\", \"192\", \"6\", \"156\", \"166\", \"155\", …\n$ Weight &lt;dbl&gt; 80, 70, 60, 76, 90, 55, 90, 110, 54, 7000, NA, 45, 55, 50\n$ Gender &lt;chr&gt; \"M\", \"O\", \"F\", \"F\", \"NA\", \"F\", \"O\", \"M\", \"N\", \"M\", \"F\", \"F\", \"M…\n\nsummary(rawdata)\n\n    Height              Weight          Gender         \n Length:14          Min.   :  45.0   Length:14         \n Class :character   1st Qu.:  55.0   Class :character  \n Mode  :character   Median :  70.0   Mode  :character  \n                    Mean   : 602.7                     \n                    3rd Qu.:  90.0                     \n                    Max.   :7000.0                     \n                    NA's   :1                          \n\nhead(rawdata)\n\n# A tibble: 6 × 3\n  Height Weight Gender\n  &lt;chr&gt;   &lt;dbl&gt; &lt;chr&gt; \n1 180        80 M     \n2 175        70 O     \n3 sixty      60 F     \n4 178        76 F     \n5 192        90 NA    \n6 6          55 F     \n\nskimr::skim(rawdata)\n\n\nData summary\n\n\nName\nrawdata\n\n\nNumber of rows\n14\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n2\n\n\nnumeric\n1\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nHeight\n0\n1\n1\n5\n0\n13\n0\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nWeight\n1\n0.93\n602.69\n1922.25\n45\n55\n70\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\n\n\nCleaning\nBy inspecting the data as done above, we find some problems that need addressing:\nFirst, there is an entry for height which says “sixty” instead of a number. Does that mean it should be a numeric 60? It somehow doesn’t make sense since the weight is 60kg, which can’t happen for a 60cm person (a baby). Since we don’t know how to fix this, we might decide to remove the person. This “sixty” entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn’t very meaningful. So let’s fix that first.\n\nd1 &lt;- rawdata %&gt;% dplyr::filter( Height != \"sixty\" ) %&gt;% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\n\n\nData summary\n\n\nName\nd1\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n151.62\n46.46\n6\n154.00\n165\n175\n192\n▁▁▁▂▇\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\nhist(d1$Height)\n\n\n\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don’t know, we might need to remove this person, which we’ll do here.\n\nd2 &lt;- d1 %&gt;% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n\n\nData summary\n\n\nName\nd2\n\n\nNumber of rows\n13\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1.00\n165.23\n16.52\n133\n155.00\n166\n178\n192\n▂▇▆▆▃\n\n\nWeight\n1\n0.92\n647.92\n2000.48\n45\n54.75\n73\n90\n7000\n▇▁▁▁▁\n\n\n\n\n\nHeight values seem ok now.\nNow let’s look at the Weight variable. There is a person with weight of 7000, which is impossible, and one person with missing weight. To be able to analyze the data, we’ll remove those individuals as well.\n\nd3 &lt;- d2 %&gt;%  dplyr::filter(Weight != 7000) %&gt;% tidyr::drop_na()\nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\ncharacter\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: character\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmin\nmax\nempty\nn_unique\nwhitespace\n\n\n\n\nGender\n0\n1\n1\n2\n0\n5\n0\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow checking the Gender variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\nd3$Gender &lt;- as.factor(d3$Gender)  \nskimr::skim(d3)\n\n\nData summary\n\n\nName\nd3\n\n\nNumber of rows\n11\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n5\nM: 4, F: 3, O: 2, N: 1\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n167.09\n16.81\n133\n155.5\n166\n179\n192\n▂▇▅▇▅\n\n\nWeight\n0\n1\n70.45\n20.65\n45\n54.5\n70\n85\n110\n▇▂▃▃▂\n\n\n\n\n\nNow we see that there is another NA, but it’s not NA from R, instead it was loaded as character and is now considered as a category. Well proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I’m also using droplevels() to get rid of it.\n\nd4 &lt;- d3 %&gt;% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %&gt;% droplevels()\nskimr::skim(d4)\n\n\nData summary\n\n\nName\nd4\n\n\nNumber of rows\n9\n\n\nNumber of columns\n3\n\n\n_______________________\n\n\n\nColumn type frequency:\n\n\n\nfactor\n1\n\n\nnumeric\n2\n\n\n________________________\n\n\n\nGroup variables\nNone\n\n\n\nVariable type: factor\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nordered\nn_unique\ntop_counts\n\n\n\n\nGender\n0\n1\nFALSE\n3\nM: 4, F: 3, O: 2\n\n\n\nVariable type: numeric\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nskim_variable\nn_missing\ncomplete_rate\nmean\nsd\np0\np25\np50\np75\np100\nhist\n\n\n\n\nHeight\n0\n1\n165.67\n15.98\n133\n156\n166\n178\n183\n▂▁▃▃▇\n\n\nWeight\n0\n1\n70.11\n21.25\n45\n55\n70\n80\n110\n▇▂▃▂▂\n\n\n\n\n\nAll done, data is clean now.\nLet’s assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\nprocesseddata &lt;- d4\n\n\n\nSave data\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. This preserves coding like factors, characters, numeric, etc. If you save as CSV, that information would get lost. However, CSV is better for sharing with others since it’s plain text. If you do CSV, you might want to write down somewhere what each variable is.\nSee here for some suggestions on how to store your processed data: http://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\nsave_data_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n\nNote the use of the here package and here command to specify a path relative to the main project directory, that is the folder that contains the .Rproj file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\nNotes\nRemoving anyone observation with “faulty” or missing data is one approach. It’s often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information)."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/eda.html",
    "href": "starter-analysis-exercise/code/eda-code/eda.html",
    "title": "An example exploratory analysis script",
    "section": "",
    "text": "This Quarto file loads the cleaned data and does some exploring.\nI’m only showing it the way where the code is included in the file. As described in the processing_code materials, I currently prefer the approach of having R code in a separate file and pulling it in.\nBut I already had this written and haven’t yet re-done it that way. Feel free to redo and send a pull request on GitHub :)\nAgain, it is largely a matter of preference and what makes the most sense to decide if one wants to have code inside Quarto files, or as separate R files. And sometimes, an R script with enough comments is good enough and one doesn’t need a Quarto file.\nAlso note that while here I split cleaning and exploring, this is iterative. You saw that as part of the processing, we already had to explore the data somewhat to understand how to clean it. In general, as you explore, you’ll find things that need cleaning. As you clean, you can explore more. Therefore, at times it might make more sense to combine the cleaning and exploring code parts into a single R or Quarto file. Or split things in any other logical way.\nAs part of the exploratory analysis, you should produce plots or tables or other summary quantities for the most interesting/important quantities in your data. Depending on the total number of variables in your dataset, explore all or some of the others. Figures produced here might be histograms or density plots, correlation plots, etc. Tables might summarize your data.\nStart by exploring one variable at a time. Then continue by creating plots or tables of the outcome(s) of interest and the predictor/exposure/input variables you are most interested in. If your dataset is small, you can do that for all variables.\nPlots produced here can be scatterplots, boxplots, violinplots, etc. Tables can be simple 2x2 tables or larger ones.\n\nSetup\n\n#load needed packages. make sure they are installed.\nlibrary(here) #for data loading/saving\n\nhere() starts at C:/Data/Github/andreashandel/online-portfolio-template\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(skimr)\nlibrary(ggplot2)\n\nLoad the data.\n\n#Path to data. Note the use of the here() package and not absolute paths\ndata_location &lt;- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\n#load data\nmydata &lt;- readRDS(data_location)\n\n\n\nData exploration through tables\nShowing a bit of code to produce and save a summary table.\n\nsummary_df = skimr::skim(mydata)\nprint(summary_df)\n\n── Data Summary ────────────────────────\n                           Values\nName                       mydata\nNumber of rows             9     \nNumber of columns          3     \n_______________________          \nColumn type frequency:           \n  factor                   1     \n  numeric                  2     \n________________________         \nGroup variables            None  \n\n── Variable type: factor ───────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate ordered n_unique top_counts      \n1 Gender                0             1 FALSE          3 M: 4, F: 3, O: 2\n\n── Variable type: numeric ──────────────────────────────────────────────────────\n  skim_variable n_missing complete_rate  mean   sd  p0 p25 p50 p75 p100 hist \n1 Height                0             1 166.  16.0 133 156 166 178  183 ▂▁▃▃▇\n2 Weight                0             1  70.1 21.2  45  55  70  80  110 ▇▂▃▂▂\n\n# save to file\nsummarytable_file = here(\"starter-analysis-exercise\",\"results\", \"tables-files\", \"summarytable.rds\")\nsaveRDS(summary_df, file = summarytable_file)\n\nWe are saving the results to the results/tables folder. Structure the folders inside results such that they make sense for your specific analysis. Provide enough documentation that someone can understand what you are doing and what goes where. readme.md files inside each folder are a good idea.\n\n\nData exploration through figures\nHistogram plots for the continuous outcomes.\nHeight first.\n\np1 &lt;- mydata %&gt;% ggplot(aes(x=Height)) + geom_histogram() \nplot(p1)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-distribution.png\")\nggsave(filename = figure_file, plot=p1) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow weights.\n\np2 &lt;- mydata %&gt;% ggplot(aes(x=Weight)) + geom_histogram() \nplot(p2)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"weight-distribution.png\")\nggsave(filename = figure_file, plot=p2) \n\nSaving 7 x 5 in image\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nNow height as function of weight.\n\np3 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight)) + geom_point() + geom_smooth(method='lm')\nplot(p3)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight.png\")\nggsave(filename = figure_file, plot=p3) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nOnce more height as function of weight, stratified by gender. Note that there is so little data, it’s a bit silly. But we’ll plot it anyway.\n\np4 &lt;- mydata %&gt;% ggplot(aes(x=Height, y=Weight, color = Gender)) + geom_point() + geom_smooth(method='lm')\nplot(p4)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\n\nWarning in max(ids, na.rm = TRUE): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nfigure_file = here(\"starter-analysis-exercise\",\"results\",\"figures\",\"height-weight-stratified.png\")\nggsave(filename = figure_file, plot=p4) \n\nSaving 7 x 5 in image\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning in qt((1 - level)/2, df): NaNs produced\n\nWarning in qt((1 - level)/2, df): no non-missing arguments to max; returning\n-Inf\n\n\n\n\nNotes\nFor your own explorations, tables and figures can be “quick and dirty”. As long as you can see what’s going on, there is no need to polish them. That’s in contrast to figures you’ll produce for your final products (paper, report, presentation, website, etc.). Those should look as nice, polished and easy to understand as possible."
  },
  {
    "objectID": "presentation-exercise/presentation-exercise.html",
    "href": "presentation-exercise/presentation-exercise.html",
    "title": "Presentation Exercise",
    "section": "",
    "text": "Placeholder file for the future data/results presentation exercise.\n\nload libraries\n\nlibrary(ggplot2)\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\nlibrary(tidyverse)\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(here)\n\nWarning: package 'here' was built under R version 4.3.3\n\n\nhere() starts at C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/LeonelSalazar-P2-Portfolio\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(flextable)\n\nWarning: package 'flextable' was built under R version 4.3.3\n\n\n\nAttaching package: 'flextable'\n\nThe following objects are masked from 'package:plotly':\n\n    highlight, style\n\nThe following object is masked from 'package:purrr':\n\n    compose\n\n\n\n\nImport data\n\ndata &lt;- read.csv(\"piedata.csv\", header = TRUE, sep = \",\")\n\n\ndata$Category &lt;- as.factor(data$Category)\ndata$Value &lt;- as.numeric(data$Value)\n\n\n\nstr(data)\n\n'data.frame':   4 obs. of  2 variables:\n $ Category: Factor w/ 4 levels \"Other\",\"Parking Lot\",..: 3 2 4 1\n $ Value   : num  36 32 20 12\n\n\n\n\nCreate the Graph\n\nblue_palette &lt;- scales::brewer_pal(palette = \"Blues\")(4)\n\n\nggplot(data, aes(x = \"\", y = Value, fill = Category)) +\n  geom_bar(stat = \"identity\", width = 1) +\n  coord_polar(\"y\", start = 0) +\n  theme_void() +\n  scale_fill_manual(values = blue_palette) +  # Use the blue color palette\n  labs(title = \"RESIDENCES ARE THE LEADING LOCATION OF GUN THEFTS FROM CARS\") +\n  theme(legend.position = \"bottom\",\n        plot.title = element_text(hjust = 0.5, margin = margin(b = 20)))  # Center title and adjust bottom margin\n\n\n\n\n\n\n\n\n\nset_flextable_defaults(\n  font.color = \"black\",\n  border.color = \"lightblue\",\n  theme_fun = \"theme_box\")\n\ndat &lt;- data.frame(\n  Category = c(\"Other\", \"Parking Lot\", \"Residence\", \"Road\"),\n  Value = c(12, 32, 36, 20 ) \n  \n)\nflextable(dat)\n\nCategoryValueOther12Parking Lot32Residence36Road20\n\n\n\ninit_flextable_defaults()\nflextable(dat)\n\nCategoryValueOther12Parking Lot32Residence36Road20"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html",
    "href": "coding-exercise/coding-exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "Placeholder file for the future R coding exercise."
  },
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Hello, my name is Leo and I like data."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\n\nAnd hello again\nWelcome to my website and data analysis portfolio.\n\nPlease use the Menu Bar above to look around.\nHave fun!\n\nFeel free to change this text any way you want 😁!"
  },
  {
    "objectID": "starter-analysis-exercise/code/analysis-code/readme.html",
    "href": "starter-analysis-exercise/code/analysis-code/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory analysis and statistical analysis on the processed/cleaned data. The code produces a few tables and figures, which are saved in the results folder.\nIt’s the same code done 3 times:\n\nFirst, there is an R script that you can run which does all the computations.\nSecond, there is a Quarto file which contains exactly the same code as the R script.\nThird, my current favorite, is a Quarto file with an approach where the code is pulled in from the R script and run.\n\nThe last version has the advantage of having code in one place for easy writing/debugging, and then being able to pull the code into the Quarto file for a nice combination of text/commentary and code.\nEach way of doing this is a reasonable approach, pick whichever one you prefer or makes the most sense for your setup. Whichever approach you choose, add ample documentation/commentary so you and others can easily understand what’s going on and what is done."
  },
  {
    "objectID": "starter-analysis-exercise/code/eda-code/readme.html",
    "href": "starter-analysis-exercise/code/eda-code/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code to do some simple exploratory data analysis (EDA) on the processed/cleaned data. The code produces a few tables and figures, which are saved in the appropriate results sub-folder."
  },
  {
    "objectID": "starter-analysis-exercise/code/processing-code/readme.html",
    "href": "starter-analysis-exercise/code/processing-code/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains code for processing data.\nCurrently, there is just a single Quarto file to illustrate how the processing can look like.\nInstead of a Quarto file that contains code, it is also possible to use R scripts or a combination of R scripts and Quarto code. Those approaches are illustrated in the full dataanalysis-template repository."
  },
  {
    "objectID": "starter-analysis-exercise/data/raw-data/readme.html",
    "href": "starter-analysis-exercise/data/raw-data/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "This folder contains a simple made-up data-set in an Excel file.\nIt contains the variables Height, Weight and Gender of a few imaginary individuals.\nThe dataset purposefully contains some faulty entries that need to be cleaned.\nGenerally, any dataset should contain some meta-data explaining what each variable in the dataset is. (This is often called a Codebook.) For this simple example, the codebook is given as a second sheet in the Excel file.\nThis raw data-set should generally not be edited by hand. It should instead be loaded and processed/cleaned using code."
  },
  {
    "objectID": "starter-analysis-exercise/products/readme.html",
    "href": "starter-analysis-exercise/products/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "The folders inside this folder should contain all the products of your project.\nFor a classical academic project, this will be a peer-reviewed manuscript, and should be placed into a manuscript folder.\nFor our case, since we’ll want to put it on the website, we call it a report.\nOften you need a library of references in bibtex format, as well as a CSL style file that determines reference formatting. Since those files might be used by several of the products, I’m placing them in the main products folder. Feel free to re-organize."
  },
  {
    "objectID": "starter-analysis-exercise/results/figures/readme.html",
    "href": "starter-analysis-exercise/results/figures/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all figures.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "starter-analysis-exercise/results/tables-files/readme.html",
    "href": "starter-analysis-exercise/results/tables-files/readme.html",
    "title": "YOURNAME Data Analysis Portfolio",
    "section": "",
    "text": "Folder for all tables (generally stored as Rds files) and other files.\nYou can create further sub-folders if that makes sense."
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#loading-and-checking-data",
    "href": "coding-exercise/coding-exercise.html#loading-and-checking-data",
    "title": "R Coding Exercise",
    "section": "Loading and Checking Data",
    "text": "Loading and Checking Data\n\nImport libraries\n\nlibrary(dslabs) # to import dataset\n\nWarning: package 'dslabs' was built under R version 4.3.3\n\nlibrary(tidyverse) # data aggregation\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(dplyr) # data aggregation? \ndata(gapminder)\n\nlibrary(renv)\n\nWarning: package 'renv' was built under R version 4.3.3\n\n\n\nAttaching package: 'renv'\n\nThe following object is masked from 'package:purrr':\n\n    modify\n\nThe following objects are masked from 'package:stats':\n\n    embed, update\n\nThe following objects are masked from 'package:utils':\n\n    history, upgrade\n\nThe following objects are masked from 'package:base':\n\n    autoload, load, remove\n\n\n\n\nHelp Function\n\nhelp(\"gapminder\")\n\nstarting httpd help server ... done\n\n\n\n\nData Structure Overview\n\nstr(gapminder)\n\n'data.frame':   10545 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 1 2 3 4 5 6 7 8 9 10 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  115.4 148.2 208 NA 59.9 ...\n $ life_expectancy : num  62.9 47.5 36 63 65.4 ...\n $ fertility       : num  6.19 7.65 7.32 4.43 3.11 4.55 4.82 3.45 2.7 5.57 ...\n $ population      : num  1636054 11124892 5270844 54681 20619075 ...\n $ gdp             : num  NA 1.38e+10 NA NA 1.08e+11 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 4 1 1 2 2 3 2 5 4 3 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 19 11 10 2 15 21 2 1 22 21 ...\n\n\n\n\nData Summary\n\nsummary(gapminder)\n\n                country           year      infant_mortality life_expectancy\n Albania            :   57   Min.   :1960   Min.   :  1.50   Min.   :13.20  \n Algeria            :   57   1st Qu.:1974   1st Qu.: 16.00   1st Qu.:57.50  \n Angola             :   57   Median :1988   Median : 41.50   Median :67.54  \n Antigua and Barbuda:   57   Mean   :1988   Mean   : 55.31   Mean   :64.81  \n Argentina          :   57   3rd Qu.:2002   3rd Qu.: 85.10   3rd Qu.:73.00  \n Armenia            :   57   Max.   :2016   Max.   :276.90   Max.   :83.90  \n (Other)            :10203                  NA's   :1453                    \n   fertility       population             gdp               continent   \n Min.   :0.840   Min.   :3.124e+04   Min.   :4.040e+07   Africa  :2907  \n 1st Qu.:2.200   1st Qu.:1.333e+06   1st Qu.:1.846e+09   Americas:2052  \n Median :3.750   Median :5.009e+06   Median :7.794e+09   Asia    :2679  \n Mean   :4.084   Mean   :2.701e+07   Mean   :1.480e+11   Europe  :2223  \n 3rd Qu.:6.000   3rd Qu.:1.523e+07   3rd Qu.:5.540e+10   Oceania : 684  \n Max.   :9.220   Max.   :1.376e+09   Max.   :1.174e+13                  \n NA's   :187     NA's   :185         NA's   :2972                       \n             region    \n Western Asia   :1026  \n Eastern Africa : 912  \n Western Africa : 912  \n Caribbean      : 741  \n South America  : 684  \n Southern Europe: 684  \n (Other)        :5586  \n\n\n\n\nClass Functions - Object Determination\n\nclass(gapminder)\n\n[1] \"data.frame\""
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data",
    "href": "coding-exercise/coding-exercise.html#processing-data",
    "title": "R Coding Exercise",
    "section": "Processing Data",
    "text": "Processing Data\n\nAssign only African countries to a new object/variable.\n\nafricadata = filter(gapminder, continent == 'Africa')\nhead(africadata)\n\n       country year infant_mortality life_expectancy fertility population\n1      Algeria 1960            148.2           47.50      7.65   11124892\n2       Angola 1960            208.0           35.98      7.32    5270844\n3        Benin 1960            186.9           38.29      6.28    2431620\n4     Botswana 1960            115.5           50.34      6.62     524029\n5 Burkina Faso 1960            161.3           35.21      6.29    4829291\n6      Burundi 1960            145.1           40.58      6.95    2786740\n          gdp continent          region\n1 13828152297    Africa Northern Africa\n2          NA    Africa   Middle Africa\n3   621797131    Africa  Western Africa\n4   124460933    Africa Southern Africa\n5   596612183    Africa  Western Africa\n6   341126765    Africa  Eastern Africa\n\n\n\n\nAfrica Data Structure Overview\n\nstr(africadata)\n\n'data.frame':   2907 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  1960 1960 1960 1960 1960 1960 1960 1960 1960 1960 ...\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n $ fertility       : num  7.65 7.32 6.28 6.62 6.29 6.95 5.65 6.89 5.84 6.25 ...\n $ population      : num  11124892 5270844 2431620 524029 4829291 ...\n $ gdp             : num  1.38e+10 NA 6.22e+08 1.24e+08 5.97e+08 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n\n\n\nAfrica Summary\n\nsummary(africadata)\n\n         country          year      infant_mortality life_expectancy\n Algeria     :  57   Min.   :1960   Min.   : 11.40   Min.   :13.20  \n Angola      :  57   1st Qu.:1974   1st Qu.: 62.20   1st Qu.:48.23  \n Benin       :  57   Median :1988   Median : 93.40   Median :53.98  \n Botswana    :  57   Mean   :1988   Mean   : 95.12   Mean   :54.38  \n Burkina Faso:  57   3rd Qu.:2002   3rd Qu.:124.70   3rd Qu.:60.10  \n Burundi     :  57   Max.   :2016   Max.   :237.40   Max.   :77.60  \n (Other)     :2565                  NA's   :226                     \n   fertility       population             gdp               continent   \n Min.   :1.500   Min.   :    41538   Min.   :4.659e+07   Africa  :2907  \n 1st Qu.:5.160   1st Qu.:  1605232   1st Qu.:8.373e+08   Americas:   0  \n Median :6.160   Median :  5570982   Median :2.448e+09   Asia    :   0  \n Mean   :5.851   Mean   : 12235961   Mean   :9.346e+09   Europe  :   0  \n 3rd Qu.:6.860   3rd Qu.: 13888152   3rd Qu.:6.552e+09   Oceania :   0  \n Max.   :8.450   Max.   :182201962   Max.   :1.935e+11                  \n NA's   :51      NA's   :51          NA's   :637                        \n                       region   \n Eastern Africa           :912  \n Western Africa           :912  \n Middle Africa            :456  \n Northern Africa          :342  \n Southern Africa          :285  \n Australia and New Zealand:  0  \n (Other)                  :  0  \n\n\n\n\nAfrican Infant Mortality Object\n\ninfant_survival_rate = africadata %&gt;%\n  select(infant_mortality, life_expectancy)\nhead(infant_survival_rate)\n\n  infant_mortality life_expectancy\n1            148.2           47.50\n2            208.0           35.98\n3            186.9           38.29\n4            115.5           50.34\n5            161.3           35.21\n6            145.1           40.58\n\n\n\n\nAfrican Infant Mortality Data Structure\n\nstr(infant_survival_rate)\n\n'data.frame':   2907 obs. of  2 variables:\n $ infant_mortality: num  148 208 187 116 161 ...\n $ life_expectancy : num  47.5 36 38.3 50.3 35.2 ...\n\n\n\n\nAfrican Infant Mortality Data Summary\n\nsummary(infant_survival_rate)\n\n infant_mortality life_expectancy\n Min.   : 11.40   Min.   :13.20  \n 1st Qu.: 62.20   1st Qu.:48.23  \n Median : 93.40   Median :53.98  \n Mean   : 95.12   Mean   :54.38  \n 3rd Qu.:124.70   3rd Qu.:60.10  \n Max.   :237.40   Max.   :77.60  \n NA's   :226                     \n\n\n\n\nAfrican Mortality Object\n\nafrican_mortality = africadata %&gt;%\n  select(population, life_expectancy)\nhead(african_mortality)\n\n  population life_expectancy\n1   11124892           47.50\n2    5270844           35.98\n3    2431620           38.29\n4     524029           50.34\n5    4829291           35.21\n6    2786740           40.58\n\n\n\n\nAfrican Mortality Data Structure\n\nstr(african_mortality)\n\n'data.frame':   2907 obs. of  2 variables:\n $ population     : num  11124892 5270844 2431620 524029 4829291 ...\n $ life_expectancy: num  47.5 36 38.3 50.3 35.2 ...\n\n\n\n\nAfrican Mortality Data Summary\n\nsummary(african_mortality)\n\n   population        life_expectancy\n Min.   :    41538   Min.   :13.20  \n 1st Qu.:  1605232   1st Qu.:48.23  \n Median :  5570982   Median :53.98  \n Mean   : 12235961   Mean   :54.38  \n 3rd Qu.: 13888152   3rd Qu.:60.10  \n Max.   :182201962   Max.   :77.60  \n NA's   :51"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting",
    "href": "coding-exercise/coding-exercise.html#plotting",
    "title": "R Coding Exercise",
    "section": "Plotting",
    "text": "Plotting\n\nLife Expectancy as a Function of Infant Mortality\n\nregression = lm(infant_survival_rate$life_expectancy ~ infant_survival_rate$infant_mortality)\nrsq &lt;- function(x, y) summary(lm(infant_survival_rate$life_expectancy ~ infant_survival_rate$infant_mortality))$r.squared\nr_square = round(rsq(obs, mod), 3)\n# summary(regression)$coefficients - keep to sanity check\ncoeff = round(summary(regression)$coefficients[2],3)\ny_int = round(summary(regression)$coefficients[1],3)\nplot(\n  infant_survival_rate$infant_mortality,\n  infant_survival_rate$life_expectancy,\n  main='African Life Expectancy \\n Infant Mortality Effect',\n  xlab='Infant Mortality',\n  ylab='Life Expectancy',\n   col='lightblue', \n   bg='black', \n   pch = 21,\n)\n# rsq_str = expression(paste(\"r\"^\"2:\"))\nrsq_str = \"r2: \"\ntext(175, 75, paste0('y = ', coeff, 'x + ', y_int), cex=0.75)\ntext(170, 70, paste0(rsq_str, r_square), cex=0.75)\nabline(\n  lm(\n    infant_survival_rate$life_expectancy ~ infant_survival_rate$infant_mortality),\n  col='red',\n  lwd=1.75)\n\n\n\n\n\n\n\n\n\n\nLife Expectancy as a Function of Population\n\nregression = lm(african_mortality$life_expectancy ~ african_mortality$population)\nrsq &lt;- function(x, y) summary(lm(african_mortality$life_expectancy ~ african_mortality$population))$r.squared\nr_square = round(rsq(obs, mod), 3)\n# summary(regression)$coefficients - keep to sanity check\ncoeff = round(summary(regression)$coefficients[2],9)\ny_int = round(summary(regression)$coefficients[1],3)\nplot(\n  african_mortality$population,\n  african_mortality$life_expectancy,\n  main='African Life Expectancy \\n Population Effect',\n  xlab='Population',\n  ylab='Life Expectancy',\n  col='blue', \n  bg='lightblue', \n  pch = 21,\n)\n# rsq_str = expression(paste(\"r\"^\"2:\"))\nrsq_str = \"r2: \"\ntext(155000000, 75, paste0('y = ', coeff, 'x + ', y_int), cex=0.75)\ntext(155000000, 70, paste0(rsq_str, r_square), cex=0.75)\nabline(\nlm(\n  african_mortality$life_expectancy ~ african_mortality$population),\ncol='black',\nlwd=1.75)\n\n\n\n\n\n\n\n\nThe graph attempts to demonstrate that relationship between Population increase and life expectancy overcoming life expectancy with a low R^2 is not dependent on life expectancy but possibly resulting from the strongest will survive and improving healthcare accessibility, GDP-gross domestic product, education and food source successfully allowing those Africans to survive and continue.\n## More Data Processing ### Missing Years For Infant Mortality Data\n\nmiss_inf_mort_rows = africadata %&gt;%\n  filter(is.na(infant_mortality))\nhead(miss_inf_mort_rows)\n\n            country year infant_mortality life_expectancy fertility population\n1        Cape Verde 1960               NA           50.12      6.89     202316\n2              Chad 1960               NA           40.95      6.25    3002596\n3          Djibouti 1960               NA           45.77      6.46      83636\n4 Equatorial Guinea 1960               NA           37.69      5.51     252115\n5           Eritrea 1960               NA           39.03      6.90    1407631\n6             Gabon 1960               NA           38.83      4.38     499189\n        gdp continent         region\n1        NA    Africa Western Africa\n2 750173439    Africa  Middle Africa\n3        NA    Africa Eastern Africa\n4        NA    Africa  Middle Africa\n5        NA    Africa Eastern Africa\n6 887289809    Africa  Middle Africa\n\n\n\n\nPerform Year Groupby to Identify Distinct Missing Years\n\nmiss_inf_mort_yrs = miss_inf_mort_rows %&gt;%\n  group_by(year) %&gt;%\n  count(infant_mortality)\nmiss_inf_mort_yrs\n\n# A tibble: 23 × 3\n# Groups:   year [23]\n    year infant_mortality     n\n   &lt;int&gt;            &lt;dbl&gt; &lt;int&gt;\n 1  1960               NA    10\n 2  1961               NA    17\n 3  1962               NA    16\n 4  1963               NA    16\n 5  1964               NA    15\n 6  1965               NA    14\n 7  1966               NA    13\n 8  1967               NA    11\n 9  1968               NA    11\n10  1969               NA     7\n# ℹ 13 more rows\n\n\n\n\nExtract Only Year 2000 From africadata As New Object\n\nafricadata2000 = filter(africadata, year == 2000)\nafricadata2000\n\n                    country year infant_mortality life_expectancy fertility\n1                   Algeria 2000             33.9            73.3      2.51\n2                    Angola 2000            128.3            52.3      6.84\n3                     Benin 2000             89.3            57.2      5.98\n4                  Botswana 2000             52.4            47.6      3.41\n5              Burkina Faso 2000             96.2            52.6      6.59\n6                   Burundi 2000             93.4            46.7      7.06\n7                  Cameroon 2000             91.9            54.3      5.62\n8                Cape Verde 2000             29.1            68.4      3.70\n9  Central African Republic 2000            113.6            45.3      5.45\n10                     Chad 2000            105.7            51.5      7.35\n11                  Comoros 2000             72.7            62.1      5.32\n12         Congo, Dem. Rep. 2000            107.4            54.3      7.09\n13              Congo, Rep. 2000             76.6            52.5      5.13\n14            Cote d'Ivoire 2000             99.5            52.0      5.38\n15                 Djibouti 2000             79.7            60.0      4.47\n16                    Egypt 2000             37.0            69.7      3.31\n17        Equatorial Guinea 2000            104.8            52.9      5.77\n18                  Eritrea 2000             58.3            37.6      5.94\n19                 Ethiopia 2000             89.5            52.1      6.53\n20                    Gabon 2000             55.6            59.3      4.60\n21                   Gambia 2000             63.3            63.6      5.92\n22                    Ghana 2000             64.9            60.0      4.67\n23                   Guinea 2000            103.1            54.2      5.94\n24            Guinea-Bissau 2000            106.9            52.8      5.85\n25                    Kenya 2000             66.5            55.6      5.01\n26                  Lesotho 2000             84.1            50.7      4.09\n27                  Liberia 2000            123.0            55.8      5.88\n28                    Libya 2000             24.2            74.8      3.05\n29               Madagascar 2000             69.7            59.1      5.55\n30                   Malawi 2000            103.5            45.4      6.25\n31                     Mali 2000            116.0            53.5      6.84\n32               Mauritania 2000             76.2            63.8      5.38\n33                Mauritius 2000             16.4            71.4      1.99\n34                  Morocco 2000             42.2            71.5      2.70\n35               Mozambique 2000            115.0            52.3      5.78\n36                  Namibia 2000             49.4            54.0      4.03\n37                    Niger 2000            101.1            52.4      7.73\n38                  Nigeria 2000            112.0            55.2      6.10\n39                   Rwanda 2000            109.2            49.2      5.90\n40                  Senegal 2000             68.5            59.7      5.56\n41               Seychelles 2000             12.3            70.9      2.15\n42             Sierra Leone 2000            143.3            51.5      5.92\n43             South Africa 2000             54.0            56.4      2.87\n44                    Sudan 2000             67.8            62.4      5.44\n45                Swaziland 2000             84.0            48.8      4.21\n46                 Tanzania 2000             80.3            54.3      5.69\n47                     Togo 2000             76.2            56.7      5.29\n48                  Tunisia 2000             26.3            75.0      2.11\n49                   Uganda 2000             90.0            49.1      6.87\n50                   Zambia 2000             97.6            44.8      6.07\n51                 Zimbabwe 2000             63.5            47.9      4.07\n   population          gdp continent          region\n1    31183658  54790058957    Africa Northern Africa\n2    15058638   9129180361    Africa   Middle Africa\n3     6949366   2254838685    Africa  Western Africa\n4     1736579   5632391130    Africa Southern Africa\n5    11607944   2610945549    Africa  Western Africa\n6     6767073    835334807    Africa  Eastern Africa\n7    15927713  10075040331    Africa   Middle Africa\n8      438737    539227053    Africa  Western Africa\n9     3726048    959413051    Africa   Middle Africa\n10    8343321   1385050964    Africa   Middle Africa\n11     547696    201900820    Africa  Eastern Africa\n12   48048664   4305797176    Africa   Middle Africa\n13    3109269   3219893817    Africa   Middle Africa\n14   16517948  10417006096    Africa  Western Africa\n15     722562    551230862    Africa  Eastern Africa\n16   68334905  99838540997    Africa Northern Africa\n17     530896   1254223037    Africa   Middle Africa\n18    3535156    633600000    Africa  Eastern Africa\n19   66443603   8179533779    Africa  Eastern Africa\n20    1231548   5067838984    Africa   Middle Africa\n21    1228863    786665264    Africa  Western Africa\n22   18824994   4977488790    Africa  Western Africa\n23    8799165   3112362568    Africa  Western Africa\n24    1315455    215455490    Africa  Western Africa\n25   31065820  12691278914    Africa  Eastern Africa\n26    1856225    745832990    Africa Southern Africa\n27    2891968    529064647    Africa  Western Africa\n28    5337264  33896600871    Africa Northern Africa\n29   15744811   3877575177    Africa  Eastern Africa\n30   11193230   1743506520    Africa  Eastern Africa\n31   11046926   2422469641    Africa  Western Africa\n32    2711421   1293653473    Africa  Western Africa\n33    1185143   4582562398    Africa  Eastern Africa\n34   28950553  37020609825    Africa Northern Africa\n35   18264536   4248747769    Africa  Eastern Africa\n36    1897953   3908501441    Africa Southern Africa\n37   11224523   1798365123    Africa  Western Africa\n38  122876723  45983449593    Africa  Western Africa\n39    8021875   1734921293    Africa  Eastern Africa\n40    9860578   4691828357    Africa  Western Africa\n41      81154    614879765    Africa  Eastern Africa\n42    4060709    635876870    Africa  Western Africa\n43   44896856 132877648091    Africa Southern Africa\n44   28079664  12366140066    Africa Northern Africa\n45    1063715   1524452437    Africa Southern Africa\n46   33991590  10185786171    Africa  Eastern Africa\n47    4874735   1294243543    Africa  Western Africa\n48    9699192  21473261837    Africa Northern Africa\n49   23757636   6193246632    Africa  Eastern Africa\n50   10585220   3237716325    Africa  Eastern Africa\n51   12499981   6689957610    Africa  Eastern Africa\n\n\n\n\nafricadata2000 Data Structure\n\nstr(africadata2000)\n\n'data.frame':   51 obs. of  9 variables:\n $ country         : Factor w/ 185 levels \"Albania\",\"Algeria\",..: 2 3 18 22 26 27 29 31 32 33 ...\n $ year            : int  2000 2000 2000 2000 2000 2000 2000 2000 2000 2000 ...\n $ infant_mortality: num  33.9 128.3 89.3 52.4 96.2 ...\n $ life_expectancy : num  73.3 52.3 57.2 47.6 52.6 46.7 54.3 68.4 45.3 51.5 ...\n $ fertility       : num  2.51 6.84 5.98 3.41 6.59 7.06 5.62 3.7 5.45 7.35 ...\n $ population      : num  31183658 15058638 6949366 1736579 11607944 ...\n $ gdp             : num  5.48e+10 9.13e+09 2.25e+09 5.63e+09 2.61e+09 ...\n $ continent       : Factor w/ 5 levels \"Africa\",\"Americas\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ region          : Factor w/ 22 levels \"Australia and New Zealand\",..: 11 10 20 17 20 5 10 20 10 10 ...\n\n\n\n\nafricadata2000 Data Summary\n\nsummary(africadata2000)\n\n         country        year      infant_mortality life_expectancy\n Algeria     : 1   Min.   :2000   Min.   : 12.30   Min.   :37.60  \n Angola      : 1   1st Qu.:2000   1st Qu.: 60.80   1st Qu.:51.75  \n Benin       : 1   Median :2000   Median : 80.30   Median :54.30  \n Botswana    : 1   Mean   :2000   Mean   : 78.93   Mean   :56.36  \n Burkina Faso: 1   3rd Qu.:2000   3rd Qu.:103.30   3rd Qu.:60.00  \n Burundi     : 1   Max.   :2000   Max.   :143.30   Max.   :75.00  \n (Other)     :45                                                  \n   fertility       population             gdp               continent \n Min.   :1.990   Min.   :    81154   Min.   :2.019e+08   Africa  :51  \n 1st Qu.:4.150   1st Qu.:  2304687   1st Qu.:1.274e+09   Americas: 0  \n Median :5.550   Median :  8799165   Median :3.238e+09   Asia    : 0  \n Mean   :5.156   Mean   : 15659800   Mean   :1.155e+10   Europe  : 0  \n 3rd Qu.:5.960   3rd Qu.: 17391242   3rd Qu.:8.654e+09   Oceania : 0  \n Max.   :7.730   Max.   :122876723   Max.   :1.329e+11                \n                                                                      \n                       region  \n Eastern Africa           :16  \n Western Africa           :16  \n Middle Africa            : 8  \n Northern Africa          : 6  \n Southern Africa          : 5  \n Australia and New Zealand: 0  \n (Other)                  : 0"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#more-plotting",
    "href": "coding-exercise/coding-exercise.html#more-plotting",
    "title": "R Coding Exercise",
    "section": "More Plotting",
    "text": "More Plotting\n\nCreate The Same Plots For africadata2000 Object\n\nFilter New Object to Create Graph Datasets (1/2)\n\nafrican_mortality2000 = africadata2000 %&gt;%\n  select(population, life_expectancy)\nhead(african_mortality2000)\n\n  population life_expectancy\n1   31183658            73.3\n2   15058638            52.3\n3    6949366            57.2\n4    1736579            47.6\n5   11607944            52.6\n6    6767073            46.7\n\n\n\n\nFilter New Object to Create Graph Datasets (2/2)\n\ninfant_survival_rate2000 = africadata2000 %&gt;%\n  select(infant_mortality, life_expectancy)\nhead(african_mortality2000)\n\n  population life_expectancy\n1   31183658            73.3\n2   15058638            52.3\n3    6949366            57.2\n4    1736579            47.6\n5   11607944            52.6\n6    6767073            46.7\n\n\n\n\nInfant Mortality Effect\n\nregression = lm(infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality)\nrsq &lt;- function(x, y) summary(lm(infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality))$r.squared\nr_square = round(rsq(obs, mod), 3)\n# summary(regression)$coefficients - keep to sanity check\ncoeff = round(summary(regression)$coefficients[2],3)\ny_int = round(summary(regression)$coefficients[1],3)\nplot(\n  infant_survival_rate2000$infant_mortality,\n  infant_survival_rate2000$life_expectancy,\n  main='African Life Expectancy \\n Infant Mortality Effect',\n  xlab='Infant Mortality',\n  ylab='Life Expectancy',\n   col='blue', \n   bg='lightblue', \n   pch = 21,\n)\n# rsq_str = expression(paste(\"r\"^\"2:\"))\nrsq_str = \"r2: \"\ntext(130, 75, paste0('y = ', coeff, 'x + ', y_int), cex=0.75)\ntext(130, 73, paste0(rsq_str, r_square), cex=0.75)\nabline(\n  lm(\n    infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality),\n  col='black',\n  lwd=1.75)\n\n\n\n\n\n\n\n\n\n\nPopulation Effect\n\nregression = lm(african_mortality2000$life_expectancy ~ african_mortality2000$population)\nrsq &lt;- function(x, y) summary(lm(african_mortality2000$life_expectancy ~ african_mortality2000$population))$r.squared\nr_square = round(rsq(obs, mod), 3)\n# summary(regression)$coefficients - keep to sanity check\ncoeff = round(summary(regression)$coefficients[2],9)\ny_int = round(summary(regression)$coefficients[1],3)\nplot(\n  african_mortality2000$population,\n  african_mortality2000$life_expectancy,\n  main='African Life Expectancy \\n Population Effect',\n  xlab='Population',\n  ylab='Life Expectancy',\n  col='blue', \n  bg='lightblue', \n  pch = 21,\n)\n# rsq_str = expression(paste(\"r\"^\"2:\"))\nrsq_str = \"r2: \"\ntext(110000000, 75, paste0('y = ', coeff, 'x + ', y_int), cex=0.75)\ntext(110000000, 73, paste0(rsq_str, r_square), cex=0.75)\nabline(\nlm(\n  african_mortality2000$life_expectancy ~ african_mortality2000$population),\ncol='black',\nlwd=1.75)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#simple-model-fits",
    "href": "coding-exercise/coding-exercise.html#simple-model-fits",
    "title": "R Coding Exercise",
    "section": "Simple Model Fits",
    "text": "Simple Model Fits\n\nFit Life Expectancy to Infant Mortality\n\nfit1 = lm(infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality)\nsummary(fit1)\n\n\nCall:\nlm(formula = infant_survival_rate2000$life_expectancy ~ infant_survival_rate2000$infant_mortality)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                                          Estimate Std. Error t value Pr(&gt;|t|)\n(Intercept)                               71.29331    2.42611  29.386  &lt; 2e-16\ninfant_survival_rate2000$infant_mortality -0.18916    0.02869  -6.594 2.83e-08\n                                             \n(Intercept)                               ***\ninfant_survival_rate2000$infant_mortality ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n\n\n\nFit Life Expectancy to Population\n\nfit2 = lm(african_mortality2000$life_expectancy ~ african_mortality2000$population)\nsummary(fit2)\n\n\nCall:\nlm(formula = african_mortality2000$life_expectancy ~ african_mortality2000$population)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n                                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                      5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\nafrican_mortality2000$population 2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n\n\nConclusion\nThe African population and life expectancy analysis shows no significant relationship between population size and life expectancy in African countries according to this linear model. The very low R-squared value indicates that population size explains only a tiny fraction of the variation in life expectancy. This suggests that other factors, such as healthcare access, economic conditions, education, and other social determinants, are likely much more important in explaining differences in life expectancy across African countries. TO reiterate, there is tremendous suffering and mortality with the children of the populations however the resiliency of this country has been successfully documented indicating the economics, education and healthcare is improving to continue allowing the population with access to these areas to successfully prosper and survive.\n************************************This section added by Eddie Cruz *************************************\n\nfit1 = lm(life_expectancy ~ log(infant_mortality), data=infant_survival_rate2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ log(infant_mortality), data = infant_survival_rate2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-21.079  -3.068   1.157   3.511   8.998 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            106.765      6.681  15.981  &lt; 2e-16 ***\nlog(infant_mortality)  -11.827      1.556  -7.601 7.83e-10 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.79 on 49 degrees of freedom\nMultiple R-squared:  0.5411,    Adjusted R-squared:  0.5317 \nF-statistic: 57.77 on 1 and 49 DF,  p-value: 7.827e-10\n\n\n\n# Linear regression\nfit1 = lm(life_expectancy ~ infant_mortality, data=infant_survival_rate2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ infant_mortality, data = infant_survival_rate2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-22.6651  -3.7087   0.9914   4.0408   8.6817 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      71.29331    2.42611  29.386  &lt; 2e-16 ***\ninfant_mortality -0.18916    0.02869  -6.594 2.83e-08 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.221 on 49 degrees of freedom\nMultiple R-squared:  0.4701,    Adjusted R-squared:  0.4593 \nF-statistic: 43.48 on 1 and 49 DF,  p-value: 2.826e-08\n\n# Polynomial regression of degree 2\nfit2 = lm(life_expectancy ~ poly(infant_mortality, 2), data=infant_survival_rate2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ poly(infant_mortality, 2), data = infant_survival_rate2000)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-20.9337  -2.6406   0.6343   3.7509   9.2568 \n\nCoefficients:\n                           Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                 56.3627     0.7914  71.221  &lt; 2e-16 ***\npoly(infant_mortality, 2)1 -41.0199     5.6516  -7.258 2.96e-09 ***\npoly(infant_mortality, 2)2  19.0567     5.6516   3.372  0.00148 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.652 on 48 degrees of freedom\nMultiple R-squared:  0.5716,    Adjusted R-squared:  0.5538 \nF-statistic: 32.02 on 2 and 48 DF,  p-value: 1.459e-09\n\n# Plotting\nplot(\n  infant_survival_rate2000$infant_mortality,\n  infant_survival_rate2000$life_expectancy,\n  main='Infant Mortality vs Life Expectancy',\n  xlab='Infant Mortality',\n  ylab='Life Expectancy',\n  col='aquamarine',\n  pch=19\n)\n\n# Add linear regression line\nabline(fit1, col='darkblue')\n\n# Add polynomial regression line\nnew_data &lt;- data.frame(infant_mortality = seq(min(infant_survival_rate2000$infant_mortality), max(infant_survival_rate2000$infant_mortality), length.out=100))\nlines(new_data$infant_mortality, predict(fit2, new_data), col='cornflowerblue')\n\n\n\n\n\n\n\n\n\n# Logarithmic regression\nfit2 = lm(life_expectancy ~ log(population), data=african_mortality2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ log(population), data = african_mortality2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-19.113  -4.809  -1.554   3.907  18.863 \n\nCoefficients:\n                Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      65.3243    12.5203   5.217 3.65e-06 ***\nlog(population)  -0.5711     0.7943  -0.719    0.476    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.502 on 49 degrees of freedom\nMultiple R-squared:  0.01044,   Adjusted R-squared:  -0.009755 \nF-statistic: 0.517 on 1 and 49 DF,  p-value: 0.4755\n\n\n\n# Linear regression\nfit1 = lm(life_expectancy ~ population, data=african_mortality2000)\nsummary(fit1)\n\n\nCall:\nlm(formula = life_expectancy ~ population, data = african_mortality2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.429  -4.602  -2.568   3.800  18.802 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 5.593e+01  1.468e+00  38.097   &lt;2e-16 ***\npopulation  2.756e-08  5.459e-08   0.505    0.616    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.524 on 49 degrees of freedom\nMultiple R-squared:  0.005176,  Adjusted R-squared:  -0.01513 \nF-statistic: 0.2549 on 1 and 49 DF,  p-value: 0.6159\n\n# Polynomial regression of degree 2\nfit2 = lm(life_expectancy ~ poly(population, 2), data=african_mortality2000)\nsummary(fit2)\n\n\nCall:\nlm(formula = life_expectancy ~ poly(population, 2), data = african_mortality2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-18.204  -4.654  -2.329   4.037  18.866 \n\nCoefficients:\n                     Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)            56.363      1.204  46.811   &lt;2e-16 ***\npoly(population, 2)1    4.304      8.599   0.501    0.619    \npoly(population, 2)2   -3.386      8.599  -0.394    0.696    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 8.599 on 48 degrees of freedom\nMultiple R-squared:  0.008379,  Adjusted R-squared:  -0.03294 \nF-statistic: 0.2028 on 2 and 48 DF,  p-value: 0.8171\n\n# Plotting\nplot(\n  african_mortality2000$population,\n  african_mortality2000$life_expectancy,\n  main='Population vs Life Expectancy',\n  xlab='Population',\n  ylab='Life Expectancy',\n  col='aquamarine',\n  pch=19\n)\n\n# Add linear regression line\nabline(fit1, col='darkblue')\n\n# Add polynomial regression line\nnew_data &lt;- data.frame(population = seq(min(african_mortality2000$population), \n                                        max(african_mortality2000$population), length.out=100))\nlines(new_data$population, predict(fit2, new_data), col='cornflowerblue')\n\n# Add a legend to differentiate the lines\nlegend(\"topright\", legend=c(\"Linear Fit\", \"Polynomial Fit (degree 2)\"), col=c(\"darkblue\", \"cornflowerblue\"), lwd=2)\n\n\n\n\n\n\n\n\n************************ Edward Cruz contributed this portion ******************************************\n\n\n\nHelp Function\n\nhelp(\"polls_us_election_2016\")\n\n\n\nData Structure Overview\n\nstr(polls_us_election_2016)\n\n'data.frame':   4208 obs. of  15 variables:\n $ state           : Factor w/ 57 levels \"Alabama\",\"Alaska\",..: 50 50 50 50 50 50 50 50 37 50 ...\n $ startdate       : Date, format: \"2016-11-03\" \"2016-11-01\" ...\n $ enddate         : Date, format: \"2016-11-06\" \"2016-11-07\" ...\n $ pollster        : Factor w/ 196 levels \"ABC News/Washington Post\",..: 1 63 81 194 65 55 18 113 195 76 ...\n $ grade           : Factor w/ 10 levels \"D\",\"C-\",\"C\",\"C+\",..: 10 6 8 6 5 9 8 8 NA 8 ...\n $ samplesize      : int  2220 26574 2195 3677 16639 1295 1426 1282 8439 1107 ...\n $ population      : chr  \"lv\" \"lv\" \"lv\" \"lv\" ...\n $ rawpoll_clinton : num  47 38 42 45 47 ...\n $ rawpoll_trump   : num  43 35.7 39 41 43 ...\n $ rawpoll_johnson : num  4 5.46 6 5 3 3 5 6 6 7.1 ...\n $ rawpoll_mcmullin: num  NA NA NA NA NA NA NA NA NA NA ...\n $ adjpoll_clinton : num  45.2 43.3 42 45.7 46.8 ...\n $ adjpoll_trump   : num  41.7 41.2 38.8 40.9 42.3 ...\n $ adjpoll_johnson : num  4.63 5.18 6.84 6.07 3.73 ...\n $ adjpoll_mcmullin: num  NA NA NA NA NA NA NA NA NA NA ...\n\n\n\n\nData Summary\n\nsummary(polls_us_election_2016)\n\n            state        startdate             enddate          \n U.S.          :1106   Min.   :2015-11-06   Min.   :2015-11-08  \n Florida       : 148   1st Qu.:2016-08-10   1st Qu.:2016-08-21  \n North Carolina: 125   Median :2016-09-23   Median :2016-09-30  \n Pennsylvania  : 125   Mean   :2016-08-31   Mean   :2016-09-06  \n Ohio          : 115   3rd Qu.:2016-10-20   3rd Qu.:2016-10-28  \n New Hampshire : 112   Max.   :2016-11-06   Max.   :2016-11-07  \n (Other)       :2477                                            \n                                     pollster        grade     \n Ipsos                                   : 919   A-     :1085  \n Google Consumer Surveys                 : 743   B      :1011  \n SurveyMonkey                            : 660   C-     : 693  \n YouGov                                  : 130   C+     : 329  \n Rasmussen Reports/Pulse Opinion Research: 125   B+     : 204  \n USC Dornsife/LA Times                   : 121   (Other): 457  \n (Other)                                 :1510   NA's   : 429  \n   samplesize       population        rawpoll_clinton rawpoll_trump  \n Min.   :   35.0   Length:4208        Min.   :11.04   Min.   : 4.00  \n 1st Qu.:  447.5   Class :character   1st Qu.:38.00   1st Qu.:35.00  \n Median :  772.0   Mode  :character   Median :43.00   Median :40.00  \n Mean   : 1148.2                      Mean   :41.99   Mean   :39.83  \n 3rd Qu.: 1236.5                      3rd Qu.:46.20   3rd Qu.:45.00  \n Max.   :84292.0                      Max.   :88.00   Max.   :68.00  \n NA's   :1                                                           \n rawpoll_johnson  rawpoll_mcmullin adjpoll_clinton adjpoll_trump   \n Min.   : 0.000   Min.   : 9.0     Min.   :17.06   Min.   : 4.373  \n 1st Qu.: 5.400   1st Qu.:22.5     1st Qu.:40.21   1st Qu.:38.429  \n Median : 7.000   Median :25.0     Median :44.15   Median :42.765  \n Mean   : 7.382   Mean   :24.0     Mean   :43.32   Mean   :42.674  \n 3rd Qu.: 9.000   3rd Qu.:27.9     3rd Qu.:46.92   3rd Qu.:46.290  \n Max.   :25.000   Max.   :31.0     Max.   :86.77   Max.   :72.433  \n NA's   :1409     NA's   :4178                                     \n adjpoll_johnson  adjpoll_mcmullin\n Min.   :-3.668   Min.   :11.03   \n 1st Qu.: 3.145   1st Qu.:23.11   \n Median : 4.384   Median :25.14   \n Mean   : 4.660   Mean   :24.51   \n 3rd Qu.: 5.756   3rd Qu.:27.98   \n Max.   :20.367   Max.   :31.57   \n NA's   :1409     NA's   :4178    \n\n\n\n\nClass Functions - Object Determination\n\nclass(polls_us_election_2016)\n\n[1] \"data.frame\"\n\n\n\n\nView data set\n\nview(polls_us_election_2016)"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#processing-data-1",
    "href": "coding-exercise/coding-exercise.html#processing-data-1",
    "title": "R Coding Exercise",
    "section": "Processing Data",
    "text": "Processing Data\n\nAssign only U.S. to a new object/variable.\n\nvote_data = filter(polls_us_election_2016,  state == 'U.S.')\nhead(vote_data)\n\n  state  startdate    enddate\n1  U.S. 2016-11-03 2016-11-06\n2  U.S. 2016-11-01 2016-11-07\n3  U.S. 2016-11-02 2016-11-06\n4  U.S. 2016-11-04 2016-11-07\n5  U.S. 2016-11-03 2016-11-06\n6  U.S. 2016-11-03 2016-11-06\n                                                    pollster grade samplesize\n1                                   ABC News/Washington Post    A+       2220\n2                                    Google Consumer Surveys     B      26574\n3                                                      Ipsos    A-       2195\n4                                                     YouGov     B       3677\n5                                           Gravis Marketing    B-      16639\n6 Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295\n  population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin\n1         lv           47.00         43.00            4.00               NA\n2         lv           38.03         35.69            5.46               NA\n3         lv           42.00         39.00            6.00               NA\n4         lv           45.00         41.00            5.00               NA\n5         rv           47.00         43.00            3.00               NA\n6         lv           48.00         44.00            3.00               NA\n  adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin\n1        45.20163      41.72430        4.626221               NA\n2        43.34557      41.21439        5.175792               NA\n3        42.02638      38.81620        6.844734               NA\n4        45.65676      40.92004        6.069454               NA\n5        46.84089      42.33184        3.726098               NA\n6        49.02208      43.95631        3.057876               NA\n\n\n\n\nU.S. Data Structure Overview\n\nstr(vote_data)\n\n'data.frame':   1106 obs. of  15 variables:\n $ state           : Factor w/ 57 levels \"Alabama\",\"Alaska\",..: 50 50 50 50 50 50 50 50 50 50 ...\n $ startdate       : Date, format: \"2016-11-03\" \"2016-11-01\" ...\n $ enddate         : Date, format: \"2016-11-06\" \"2016-11-07\" ...\n $ pollster        : Factor w/ 196 levels \"ABC News/Washington Post\",..: 1 63 81 194 65 55 18 113 76 148 ...\n $ grade           : Factor w/ 10 levels \"D\",\"C-\",\"C\",\"C+\",..: 10 6 8 6 5 9 8 8 8 10 ...\n $ samplesize      : int  2220 26574 2195 3677 16639 1295 1426 1282 1107 799 ...\n $ population      : chr  \"lv\" \"lv\" \"lv\" \"lv\" ...\n $ rawpoll_clinton : num  47 38 42 45 47 ...\n $ rawpoll_trump   : num  43 35.7 39 41 43 ...\n $ rawpoll_johnson : num  4 5.46 6 5 3 3 5 6 7.1 4 ...\n $ rawpoll_mcmullin: num  NA NA NA NA NA NA NA NA NA NA ...\n $ adjpoll_clinton : num  45.2 43.3 42 45.7 46.8 ...\n $ adjpoll_trump   : num  41.7 41.2 38.8 40.9 42.3 ...\n $ adjpoll_johnson : num  4.63 5.18 6.84 6.07 3.73 ...\n $ adjpoll_mcmullin: num  NA NA NA NA NA NA NA NA NA NA ...\n\n\n\n\nU.S. Summary\n\nsummary(vote_data)\n\n        state        startdate             enddate          \n U.S.      :1106   Min.   :2015-11-13   Min.   :2015-11-16  \n Alabama   :   0   1st Qu.:2016-05-30   1st Qu.:2016-06-02  \n Alaska    :   0   Median :2016-08-11   Median :2016-08-16  \n Arizona   :   0   Mean   :2016-07-18   Mean   :2016-07-23  \n Arkansas  :   0   3rd Qu.:2016-09-29   3rd Qu.:2016-10-03  \n California:   0   Max.   :2016-11-05   Max.   :2016-11-07  \n (Other)   :   0                                            \n                                     pollster       grade       samplesize   \n Ipsos                                   :325   A-     :405   Min.   :  250  \n USC Dornsife/LA Times                   :121   C+     :182   1st Qu.: 1083  \n CVOTER International                    :115   B      : 54   Median : 1316  \n The Times-Picayune/Lucid                : 95   C-     : 42   Mean   : 2305  \n Morning Consult                         : 53   A+     : 38   3rd Qu.: 1824  \n Rasmussen Reports/Pulse Opinion Research: 51   (Other): 97   Max.   :84292  \n (Other)                                 :346   NA's   :288                  \n  population        rawpoll_clinton rawpoll_trump   rawpoll_johnson \n Length:1106        Min.   :31.00   Min.   :28.80   Min.   : 2.000  \n Class :character   1st Qu.:42.00   1st Qu.:36.00   1st Qu.: 6.000  \n Mode  :character   Median :44.00   Median :39.00   Median : 7.000  \n                    Mean   :43.99   Mean   :39.64   Mean   : 7.019  \n                    3rd Qu.:46.00   3rd Qu.:43.48   3rd Qu.: 8.000  \n                    Max.   :57.70   Max.   :51.00   Max.   :13.000  \n                                                    NA's   :553     \n rawpoll_mcmullin adjpoll_clinton adjpoll_trump   adjpoll_johnson \n Min.   : NA      Min.   :35.90   Min.   :29.73   Min.   :0.5905  \n 1st Qu.: NA      1st Qu.:43.36   1st Qu.:39.72   1st Qu.:3.1490  \n Median : NA      Median :44.91   Median :42.32   Median :4.0687  \n Mean   :NaN      Mean   :44.88   Mean   :41.68   Mean   :4.0554  \n 3rd Qu.: NA      3rd Qu.:46.52   3rd Qu.:44.05   3rd Qu.:4.9076  \n Max.   : NA      Max.   :56.73   Max.   :50.61   Max.   :9.3203  \n NA's   :1106                                     NA's   :553     \n adjpoll_mcmullin\n Min.   : NA     \n 1st Qu.: NA     \n Median : NA     \n Mean   :NaN     \n 3rd Qu.: NA     \n Max.   : NA     \n NA's   :1106    \n\n\n\n\nAdjusted Poll Object\n\nadjusted_polls = vote_data %&gt;%\n  select(adjpoll_clinton,adjpoll_trump )\nhead(adjusted_polls)\n\n  adjpoll_clinton adjpoll_trump\n1        45.20163      41.72430\n2        43.34557      41.21439\n3        42.02638      38.81620\n4        45.65676      40.92004\n5        46.84089      42.33184\n6        49.02208      43.95631\n\n\n\n\nAdjusted Poll Data Structure\n\nstr(adjusted_polls)\n\n'data.frame':   1106 obs. of  2 variables:\n $ adjpoll_clinton: num  45.2 43.3 42 45.7 46.8 ...\n $ adjpoll_trump  : num  41.7 41.2 38.8 40.9 42.3 ...\n\n\n\n\nAdjusted Poll Data Summary\n\nsummary(adjusted_polls)\n\n adjpoll_clinton adjpoll_trump  \n Min.   :35.90   Min.   :29.73  \n 1st Qu.:43.36   1st Qu.:39.72  \n Median :44.91   Median :42.32  \n Mean   :44.88   Mean   :41.68  \n 3rd Qu.:46.52   3rd Qu.:44.05  \n Max.   :56.73   Max.   :50.61  \n\n\n\n\nRaw Poll Object\n\nraw_polls = vote_data %&gt;%\n  select(rawpoll_clinton,rawpoll_trump )\nhead(raw_polls)\n\n  rawpoll_clinton rawpoll_trump\n1           47.00         43.00\n2           38.03         35.69\n3           42.00         39.00\n4           45.00         41.00\n5           47.00         43.00\n6           48.00         44.00\n\n\n\n\nRaw Poll Data Structure\n\nstr(raw_polls)\n\n'data.frame':   1106 obs. of  2 variables:\n $ rawpoll_clinton: num  47 38 42 45 47 ...\n $ rawpoll_trump  : num  43 35.7 39 41 43 ...\n\n\n\n\nRaw Poll Data Summary\n\nsummary(raw_polls)\n\n rawpoll_clinton rawpoll_trump  \n Min.   :31.00   Min.   :28.80  \n 1st Qu.:42.00   1st Qu.:36.00  \n Median :44.00   Median :39.00  \n Mean   :43.99   Mean   :39.64  \n 3rd Qu.:46.00   3rd Qu.:43.48  \n Max.   :57.70   Max.   :51.00"
  },
  {
    "objectID": "coding-exercise/coding-exercise.html#plotting-1",
    "href": "coding-exercise/coding-exercise.html#plotting-1",
    "title": "R Coding Exercise",
    "section": "Plotting",
    "text": "Plotting\n\nAdjusted Poll as a Function for Trump & Clinton\n\n# Perform linear regression\nregression = lm(adjusted_polls$adjpoll_clinton ~ adjusted_polls$adjpoll_trump)\n\n# Function to calculate R-squared\nrsq &lt;- function() summary(regression)$r.squared\nr_square = round(rsq(), 3)\n\n# Get regression coefficients\ncoeff = round(summary(regression)$coefficients[2, 1], 3)\ny_int = round(summary(regression)$coefficients[1, 1], 3)\n\n# Create plot\nplot(\n  adjusted_polls$adjpoll_trump,\n  adjusted_polls$adjpoll_clinton,\n  main='Adjusted Polls Trump & Clinton',\n  xlab='Adjusted Trump Poll',\n  ylab='Adjusted Clinton Poll',\n  col='lightgreen',\n  bg='olivedrab3',\n  pch = 21\n)\n\n# Add regression equation and R-squared value to the plot\nrsq_str = expression(paste(\"R\"^2, \": \"))\nrsq_str = \"r2: \"\ntext(47, 55, paste0('y = ', coeff, 'x + ', y_int), cex=0.75)\ntext(47, 54, bquote(.(rsq_str) * .(r_square)), cex=0.75)\n\n# Add regression line\nabline(regression, col='darkblue', lwd=1.75)\n\n\n\n\n\n\n\n\n\n\nRaw Polls as a Function for Trump & Clinton\n\n# Perform linear regression\nregression = lm(raw_polls$rawpoll_clinton ~ raw_polls$rawpoll_trump)\n\n# Function to calculate R-squared\nrsq &lt;- function() summary(regression)$r.squared\nr_square = round(rsq(), 3)\n\n# Get regression coefficients\ncoeff = round(summary(regression)$coefficients[2, 1], 9)\ny_int = round(summary(regression)$coefficients[1, 1], 3)\n\n# Create plot\nplot(\n  raw_polls$rawpoll_trump,\n  raw_polls$rawpoll_clinton,\n  main='Raw Polls Trump & Clinton',\n  xlab='Raw Trump Poll',\n  ylab='Raw Clinton Poll',\n  col='lightgreen',\n  bg='olivedrab3',\n  pch = 21\n)\n\n# Add regression equation and R-squared value to the plot\nrsq_str = expression(paste(\"R\"^2, \": \"))\nrsq_str = \"r2: \"\ntext(47, 55, paste0('y = ', coeff, 'x + ', y_int), cex=0.75)\ntext(47, 53, bquote(.(rsq_str) * .(r_square)), cex=0.75)\n\n# Add regression line\nabline(regression, col='darkblue', lwd=1.75)\n\n\n\n\n\n\n\n\n****************************interpret the clinton and trump raw results************************************************ There exists a positive correlation: the slight positive correlation between Trumps and Clinton’s poll numbers, meaning that as Trump’s poll numbers increase, Clinton’s poll numbers tend to increase slightly as well. The low R^2(0.106) suggest that approximatley 10.6% of the variation in Clinton’s poll numbers can be explained by Trumps poll numbers. Indicative of a week positive realtionship between two variables. #Additional Data Processing to determine any missing data or NA #None Found\n\nmiss_adj_polls=vote_data%&gt;%\n  filter(is.na(adjpoll_clinton))\nhead(miss_adj_polls)\n\n [1] state            startdate        enddate          pollster        \n [5] grade            samplesize       population       rawpoll_clinton \n [9] rawpoll_trump    rawpoll_johnson  rawpoll_mcmullin adjpoll_clinton \n[13] adjpoll_trump    adjpoll_johnson  adjpoll_mcmullin\n&lt;0 rows&gt; (or 0-length row.names)\n\n\n#Additional Data Processing to determine any missing data or NA #None Found\n\nmiss_adj_polls=vote_data%&gt;%\n  filter(is.na(adjpoll_trump))\nhead(miss_adj_polls)\n\n [1] state            startdate        enddate          pollster        \n [5] grade            samplesize       population       rawpoll_clinton \n [9] rawpoll_trump    rawpoll_johnson  rawpoll_mcmullin adjpoll_clinton \n[13] adjpoll_trump    adjpoll_johnson  adjpoll_mcmullin\n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\nmiss_raw_polls=vote_data%&gt;%\n  filter(is.na(rawpoll_clinton))\nhead(miss_raw_polls)\n\n [1] state            startdate        enddate          pollster        \n [5] grade            samplesize       population       rawpoll_clinton \n [9] rawpoll_trump    rawpoll_johnson  rawpoll_mcmullin adjpoll_clinton \n[13] adjpoll_trump    adjpoll_johnson  adjpoll_mcmullin\n&lt;0 rows&gt; (or 0-length row.names)\n\n\n\nmiss_raw_polls=vote_data%&gt;%\n  filter(is.na(rawpoll_trump))\nhead(miss_raw_polls)\n\n [1] state            startdate        enddate          pollster        \n [5] grade            samplesize       population       rawpoll_clinton \n [9] rawpoll_trump    rawpoll_johnson  rawpoll_mcmullin adjpoll_clinton \n[13] adjpoll_trump    adjpoll_johnson  adjpoll_mcmullin\n&lt;0 rows&gt; (or 0-length row.names)\n\n\nFit Adjusted Poll for Clinton and Trump\n\n#Log Regression\nfit1 = lm(adjpoll_clinton ~ log(adjpoll_trump), data=adjusted_polls)\nsummary(fit1)\n\n\nCall:\nlm(formula = adjpoll_clinton ~ log(adjpoll_trump), data = adjusted_polls)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-8.351 -1.510 -0.023  1.522 12.874 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         15.4791     3.2342   4.786 1.93e-06 ***\nlog(adjpoll_trump)   7.8899     0.8677   9.093  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.37 on 1104 degrees of freedom\nMultiple R-squared:  0.06968,   Adjusted R-squared:  0.06884 \nF-statistic: 82.69 on 1 and 1104 DF,  p-value: &lt; 2.2e-16\n\n\n\n# Linear regression\nfit1 = lm(adjpoll_clinton ~ adjpoll_trump, data=adjusted_polls)\nsummary(fit1)\n\n\nCall:\nlm(formula = adjpoll_clinton ~ adjpoll_trump, data = adjusted_polls)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.3185 -1.5035 -0.0313  1.5211 12.8768 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   36.63686    0.89965  40.724   &lt;2e-16 ***\nadjpoll_trump  0.19784    0.02152   9.194   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.368 on 1104 degrees of freedom\nMultiple R-squared:  0.07112,   Adjusted R-squared:  0.07028 \nF-statistic: 84.53 on 1 and 1104 DF,  p-value: &lt; 2.2e-16\n\n# Polynomial regression of degree 2\nfit2 = lm(adjpoll_clinton ~ poly(adjpoll_trump, 2), data=adjusted_polls)\nsummary(fit2)\n\n\nCall:\nlm(formula = adjpoll_clinton ~ poly(adjpoll_trump, 2), data = adjusted_polls)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-8.2349 -1.4850 -0.0319  1.5434 12.8397 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)             44.88205    0.07118 630.515   &lt;2e-16 ***\npoly(adjpoll_trump, 2)1 21.77507    2.36731   9.198   &lt;2e-16 ***\npoly(adjpoll_trump, 2)2  3.41199    2.36731   1.441     0.15    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 2.367 on 1103 degrees of freedom\nMultiple R-squared:  0.07286,   Adjusted R-squared:  0.07118 \nF-statistic: 43.34 on 2 and 1103 DF,  p-value: &lt; 2.2e-16\n\n# Plot the data\nplot(\n  adjusted_polls$adjpoll_trump,\n  adjusted_polls$adjpoll_clinton,\n  main='Adjusted Polls: Linear and Polynomial Regression',\n  xlab='adjpoll_trump',\n  ylab='adjpoll_clinton',\n  col='lightgreen',\n  bg='olivedrab3',\n  pch = 21\n)\n\n# Add linear regression line\nabline(fit1, col='red', lwd=2)\n\n# Add polynomial regression line\n# Generate a sequence of values for adjpoll_trump for the polynomial line\nnew_data &lt;- data.frame(adjpoll_trump = seq(min(adjusted_polls$adjpoll_trump), max(adjusted_polls$adjpoll_trump), length.out=100))\n# Predict the values of adjpoll_clinton for the generated sequence\npoly_pred &lt;- predict(fit2, new_data)\n# Add the polynomial regression line to the plot\nlines(new_data$adjpoll_trump, poly_pred, col='blue', lwd=2)\n\n# Add a legend to differentiate the lines\nlegend(\"topright\", legend=c(\"Linear Fit\", \"Polynomial Fit (degree 2)\"), col=c(\"red\", \"blue\"), lwd=2)\n\n\n\n\n\n\n\n\n\n\nFit Raw Poll\n\n#Log Regression\nfit2 = lm(rawpoll_clinton ~ log(rawpoll_trump), data=vote_data)\nsummary(fit2)\n\n\nCall:\nlm(formula = rawpoll_clinton ~ log(rawpoll_trump), data = vote_data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.6571  -2.1174  -0.1328   2.0872  15.4526 \n\nCoefficients:\n                   Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)         10.6365     3.0074   3.537 0.000422 ***\nlog(rawpoll_trump)   9.0804     0.8183  11.096  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.12 on 1104 degrees of freedom\nMultiple R-squared:  0.1003,    Adjusted R-squared:  0.09952 \nF-statistic: 123.1 on 1 and 1104 DF,  p-value: &lt; 2.2e-16\n\n\n\n# Linear regression\nfit1 = lm(rawpoll_clinton ~ rawpoll_trump, data=raw_polls)\nsummary(fit1)\n\n\nCall:\nlm(formula = rawpoll_clinton ~ rawpoll_trump, data = raw_polls)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.6669  -2.0756  -0.0813   2.0966  15.3852 \n\nCoefficients:\n              Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)   34.68457    0.81985   42.31   &lt;2e-16 ***\nrawpoll_trump  0.23478    0.02055   11.43   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.11 on 1104 degrees of freedom\nMultiple R-squared:  0.1057,    Adjusted R-squared:  0.1049 \nF-statistic: 130.5 on 1 and 1104 DF,  p-value: &lt; 2.2e-16\n\n# Polynomial regression of degree 2\nfit2 = lm(rawpoll_clinton ~ poly(rawpoll_trump, 2), data=raw_polls)\nsummary(fit2)\n\n\nCall:\nlm(formula = rawpoll_clinton ~ poly(rawpoll_trump, 2), data = raw_polls)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-11.9762  -1.9498  -0.0539   1.9951  14.6987 \n\nCoefficients:\n                        Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)             43.98993    0.09277 474.176  &lt; 2e-16 ***\npoly(rawpoll_trump, 2)1 35.53508    3.08525  11.518  &lt; 2e-16 ***\npoly(rawpoll_trump, 2)2 13.46627    3.08525   4.365 1.39e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 3.085 on 1103 degrees of freedom\nMultiple R-squared:  0.1209,    Adjusted R-squared:  0.1193 \nF-statistic: 75.85 on 2 and 1103 DF,  p-value: &lt; 2.2e-16\n\n# Plot the data\nplot(\n  raw_polls$rawpoll_trump,\n  raw_polls$rawpoll_clinton,\n  main='Raw Polls: Linear and Polynomial Regression',\n  xlab='rawpoll_trump',\n  ylab='rawpoll_clinton',\n  col='lightgreen',\n  bg='olivedrab3',\n  pch = 21\n)\n\n# Add linear regression line\nabline(fit1, col='red', lwd=2)\n\n# Add polynomial regression line\n# Generate a sequence of values for rawpoll_trump for the polynomial line\nnew_data &lt;- data.frame(rawpoll_trump = seq(min(raw_polls$rawpoll_trump), max(raw_polls$rawpoll_trump), length.out=100))\n# Predict the values of rawpoll_clinton for the generated sequence\npoly_pred &lt;- predict(fit2, new_data)\n# Add the polynomial regression line to the plot\nlines(new_data$rawpoll_trump, poly_pred, col='blue', lwd=2)\n\n# Add a legend to differentiate the lines\nlegend(\"topright\", legend=c(\"Linear Fit\", \"Polynomial Fit (degree 2)\"), col=c(\"red\", \"blue\"), lwd=2)\n\n\n\n\n\n\n\n\n*************************Conclusion******************************* There exists a week positive relationship between the raw poll numbers for Trump and Clinton. There maybe other possible factors other than Trump’s poll numbers play a more significant role in determing Clinton’s poll numbers."
  },
  {
    "objectID": "manuscript_final-2.html",
    "href": "manuscript_final-2.html",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "",
    "text": "Group Ten is conducting a comprehensive analysis of historical data from various public agencies to evaluate the impact of Varroa mites, American Foulbrood, and global warming on hive losses in the United States.This research utilizes extensive datasets from the National Agricultural Statistics Service, the Agricultural Statistics Board, and the United States Department of Agriculture (USDA), encompassing multiple years of data. The data highlights the topic on hive losses attributed to mites, bacterial infections, and environmental factors related to global warming. Through advanced data visualization techniques in R, we aim to demonstrate and validate the detrimental effects of these factors on honeybee colonies, highlighting the consequent implications for honey production and broader food security. Dennis and Kemp’s study on honey bee hive collapse [@hivecollapse] provides important insights into Allee effects and ecological resilience."
  },
  {
    "objectID": "manuscript_final-2.html#description-of-data-and-data-source",
    "href": "manuscript_final-2.html#description-of-data-and-data-source",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "2.1 Description of data and data source",
    "text": "2.1 Description of data and data source\nBee colonies maintained by beekeepers are considered livestock by the USDA due to their ability to produce honey, a consumable food item, and their essential role in assisting farmers with pollination crop seasons. Given the importance of bee colonies in agriculture, it was logical to source data from the following two authoritative websites: 1. USDA National Agricultural Statistics Service (NASS): This site provides comprehensive agricultural data, including statistics on honey production and colony health. 2. Bee Informed Partnership: This site offers detailed insights and research on bee colony management and health, contributing valuable information on the status and trends of bee populations. Index Catalog // USDA Economics, Statistics and Market Information System. (n.d.-a). https://usda.library.cornell.edu/catalog?f%5Bkeywords_sim%5D%5B%5D=honey+bees&locale=en\nUSDA - National Agricultural Statistics Service - Surveys - honey bee surveys and reports. (n.d.). https://www.nass.usda.gov/Surveys/Guide_to_NASS_Surveys/Bee_and_Honey/"
  },
  {
    "objectID": "manuscript_final-2.html#questionshypotheses-to-be-addressed",
    "href": "manuscript_final-2.html#questionshypotheses-to-be-addressed",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "2.2 Questions/Hypotheses to be addressed",
    "text": "2.2 Questions/Hypotheses to be addressed\nHypothesis: “The negative impacts of mites, bacterium, and global warming have detrimental effects on honeybee colonies in the United States and Texas, which in turn will lead to a decline in honey production and negatively impact food production.” This hypothesis can be tested and validated through a visualization of outcomes using R, demonstrating the relationship between these factors and their effects on honeybee colonies.\n\n2.2.1 Bacterium Infection Foul Brood\n\n\n\n\n\n\n\n2.2.2 Dead bees resulting from extreme heat found in hive\n\n#Citation section To cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in [@mckay2020; @mckay2020a].\n#Here are the BibTex entries for citations:\nUsing this in RMarkdown: #Make sure to save these entries in a file names’reference.bib’ and include it in your R Markdown document like this:"
  },
  {
    "objectID": "manuscript_final-2.html#schematic-of-workflow",
    "href": "manuscript_final-2.html#schematic-of-workflow",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.1 Schematic of workflow",
    "text": "3.1 Schematic of workflow\nSometimes you might want to show a schematic diagram/figure that was not created with code (if you can do it with code, do it). ?@fig-schematic is an example of some - completely random/unrelated - schematic that was generated with Biorender. We store those figures in the assets folder.\n\n#knitr::include_graphics(here(\"assets\",\"antigen-recognition.png\"))"
  },
  {
    "objectID": "manuscript_final-2.html#data-aquisition",
    "href": "manuscript_final-2.html#data-aquisition",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.2 Data aquisition",
    "text": "3.2 Data aquisition\nWe got our data from the United States Department of Agriculture (USDA)."
  },
  {
    "objectID": "manuscript_final-2.html#data-import-and-cleaning",
    "href": "manuscript_final-2.html#data-import-and-cleaning",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.3 Data import and cleaning",
    "text": "3.3 Data import and cleaning\nWe decided to clean out our data from a few different datasets. We had to remove blank spaces and columns that were not pertinent to our analysis. We then filtered out other observations that did not directly deal with the data we are exploring. We are looking for cause of death to bee colonies and how they are affected by mites and climate change so we wanted to single out data that represented the losses so we can explore the different states by year and determine how the colonies were affected.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(knitr)\n\n\nlibrary(here)\n\n\n# Install and load the here package\n#install.packages(\"here\")\nlibrary(here)\n\nhere()\n\n[1] \"C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/LeonelSalazar-P2-Portfolio\"\n\n# Create a 'data' directory within the project\ndir.create(here(\"data\"))\n\nWarning in dir.create(here(\"data\")): 'C:\\Users\\Leonel\\Desktop\\MSDA\\MS Data\nAnalytics\\Current Class\\DA 6833\\Practicum 2\nGithub\\LeonelSalazar-P2-Portfolio\\data' already exists\n\n# Read the CSV file\ndata &lt;- read.csv(here(\"Databystate.csv\"))\n\n\n#data &lt;- read.csv(\"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II #Repository/P2-Practicum-II-Portfolio-EdwardCruz/DatabyState.csv\")\n\n\n# Select all columns except 3, 6, and 9\nData_Clean &lt;- dplyr::select(data, -c(3, 6, 9))\n\n\n# Output cleaned data file to a csv file.\n\nwrite.csv(Data_Clean, \"Data_Clean.csv\", row.names = FALSE)\n\n#write.csv(Data_Clean, \"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II #Repository/P2-Practicum-II-Portfolio-EdwardCruz/docs/Databystate_Clean.csv\")\n\n\n# Assuming your data frame is named \"data\"\n\n# Filter for rows where \"Loss\" or \"Deadout\" is present in any column (case-insensitive)\n\nlibrary(stringr)  # Load stringr package for regular expressions\ndata_filtered &lt;- Data_Clean[rowSums(sapply(data, grepl, pattern = c(\"Loss\"), ignore.case = TRUE)) &gt; 0, ]\n\n\n# Output cleaned data file to a csv file.\n\nwrite.csv(data_filtered, \"Data_Filtered.csv\", row.names = FALSE)\n\n#write.csv(Data_Clean, \"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II #Repository/P2-Practicum-II-Portfolio-EdwardCruz/docs/Databystate_Filtered.csv\")\n\n\n# View data str to see what class they are.\n\nstr(data_filtered)\n\n'data.frame':   718 obs. of  6 variables:\n $ Year      : int  2017 2017 2017 2017 2017 2017 2017 2017 2017 2017 ...\n $ Period    : chr  \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" ...\n $ State     : chr  \"ALABAMA\" \"ARIZONA\" \"ARKANSAS\" \"CALIFORNIA\" ...\n $ State.ANSI: int  1 4 5 6 8 9 12 13 15 16 ...\n $ Data.Item : chr  \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" ...\n $ Value     : chr  \"250\" \"2,600\" \"180\" \"19,000\" ...\n\n\n\n3.3.1 Boxplot of Value by Year and Data Item\nThe third image is a boxplot comparing the values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” from 2015 to 2017. The boxplot provides insights into: - The central tendency and spread of losses due to both disorders. - Presence of outliers indicates that there are occasional, significantly higher losses. - Comparative analysis shows that both types of losses have varying distributions each year.\nThis indicates that while both types of losses are present each year, the magnitude and frequency of extreme loss events can differ, suggesting variability in the factors contributing to colony losses.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(here)\n\nstr(data_filtered)\n\n'data.frame':   718 obs. of  6 variables:\n $ Year      : int  2017 2017 2017 2017 2017 2017 2017 2017 2017 2017 ...\n $ Period    : chr  \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" ...\n $ State     : chr  \"ALABAMA\" \"ARIZONA\" \"ARKANSAS\" \"CALIFORNIA\" ...\n $ State.ANSI: int  1 4 5 6 8 9 12 13 15 16 ...\n $ Data.Item : chr  \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" ...\n $ Value     : chr  \"250\" \"2,600\" \"180\" \"19,000\" ...\n\n# Load the dataset\ndata_filtered &lt;- read.csv(here::here(\"Data_Filtered.csv\"), stringsAsFactors = FALSE)\n\n# Convert 'Value' to numeric\ndata_filtered$Value &lt;- as.numeric(gsub(\",\", \"\", data_filtered$Value))\n\n# Handle missing values by replacing NAs with the median value\ndata_filtered$Value[is.na(data_filtered$Value)] &lt;- median(data_filtered$Value, na.rm = TRUE)\n\n# Boxplot of Value by Year and Data.Item\nggplot(data_filtered, aes(x = factor(Year), y = Value, fill = Data.Item)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Boxplot of Value by Year and Data.Item\", x = \"Year\", y = \"Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n3.3.2 Scatterplot of Value by State ANSI\nThe fourth image is a scatterplot showing values for different states (ANSI coded) across the years 2015 to 2017. Key points include: - Each color represents a different year (2015: Red, 2016: Green, 2017: Blue). - The scatterplot reveals the distribution of values across states and highlights any trends or patterns over the three years.\nThis scatterplot indicates that while some states experience consistently high or low values, others show significant variability year over year. This could suggest regional differences in factors affecting bee colony health.\n\n# Scatterplot of Value by State.ANSI\nggplot(data_filtered, aes(x = State.ANSI, y = Value, color = factor(Year))) +\n  geom_point() +\n  labs(title = \"Scatterplot of Value by State.ANSI\", x = \"State.ANSI\", y = \"Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n3.3.3 Boxplot of Value by Period and Data Item\nThe fifth image is a boxplot comparing the values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” across different periods of the year: - APR THRU JUN - JAN THRU MAR - JUL THRU SEP - OCT THRU DEC\nKey insights include: - Seasonal trends in colony losses, with some periods showing higher median losses or more variability. - Outliers indicate extreme loss events occurring in specific periods.\nThis seasonal analysis suggests that certain times of the year are more prone to higher losses, potentially due to environmental factors, resource availability, or management practices.\n\n# Load necessary library\nlibrary(ggplot2)\nlibrary(scales)\n\n\n# Assuming data_filtered is already loaded and has the required columns\n\n# Create the plot\np &lt;- ggplot(data_filtered, aes(x = Period, y = Value, fill = Data.Item)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Boxplot of Value by Period and Data.Item\", x = \"Period\", y = \"Value\")\n\n# Print the plot\nprint(p)\n\n\n\n\n\n\n\n\n\n\n3.3.4 Boxplot of Value by Period and Data Item\nThe fifth image is a boxplot comparing the values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” across different periods of the year: - APR THRU JUN - JAN THRU MAR - JUL THRU SEP - OCT THRU DEC\nKey insights include: - Seasonal trends in colony losses, with some periods showing higher median losses or more variability. - Outliers indicate extreme loss events occurring in specific periods.\nThis seasonal analysis suggests that certain times of the year are more prone to higher losses, potentially due to environmental factors, resource availability, or management practices.\n\n\n3.3.5 Overall Analysis\n\nThe composition of honey indicates its high sugar content, essential for energy but also highlighting the presence of beneficial components like enzymes and vitamins.\nThe spread of Varroa mites map highlights the widespread and growing impact of these pests over time, emphasizing the need for ongoing management and control efforts.\nThe boxplots and scatterplots provide a detailed view of the variability and trends in colony losses due to different factors, both over time and across different regions. These plots suggest that while losses are a consistent issue, their magnitude and causes can vary widely, pointing to the need for tailored strategies to address colony health.\n\nThese visualizations collectively provide a comprehensive overview of the challenges faced by bee colonies, from composition and health to external threats like Varroa mites and seasonal variations in losses.\n\n\n3.3.6 VARROA MITE EXPOSED\n\n\n\n\n\n\n\n3.3.7 VARROA MITE\n\n\n\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(reshape2)\n\nWarning: package 'reshape2' was built under R version 4.3.3\n\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\nlibrary(cluster)\n\n\nAttaching package: 'cluster'\n\n\nThe following object is masked from 'package:maps':\n\n    votes.repub\n\nlibrary(car)\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:purrr':\n\n    some\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nlibrary(factoextra)\n\nWarning: package 'factoextra' was built under R version 4.3.3\n\n\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\nWarning: package 'rpart.plot' was built under R version 4.3.3\n\nlibrary(randomForest)\n\nWarning: package 'randomForest' was built under R version 4.3.3\n\n\nrandomForest 4.7-1.1\n\n\nType rfNews() to see new features/changes/bug fixes.\n\n\n\nAttaching package: 'randomForest'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\nlibrary(e1071)\n\nWarning: package 'e1071' was built under R version 4.3.3\n\n\n\n# Load your dataset\n# Assuming your data frame is named 'data_hcny'\n\ndata_hcny &lt;- read.csv(here(\"hcny_CleanDraft.csv\"))\n\n\n#data_hcny &lt;- read.csv(\"C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/leonelsalazar-P2-portfolio/Group Project/hcnydata_cleaned.csv\")\n\ndata_clean &lt;- na.omit(data_hcny)\n\n\n# Descriptive Statistics\nprint(\"Descriptive Statistics:\")\n\n[1] \"Descriptive Statistics:\"\n\nsummary(data_clean)\n\n    state            varroa_mites    other_pests       disease      \n Length:11          Min.   : 8.00   Min.   : 1.70   Min.   : 0.100  \n Class :character   1st Qu.:13.45   1st Qu.: 3.20   1st Qu.: 0.750  \n Mode  :character   Median :26.80   Median : 6.40   Median : 1.000  \n                    Mean   :32.41   Mean   :11.55   Mean   : 6.718  \n                    3rd Qu.:48.85   3rd Qu.:11.85   3rd Qu.: 4.600  \n                    Max.   :67.20   Max.   :42.30   Max.   :47.800  \n   pesticides        other          unknown      \n Min.   : 0.50   Min.   : 0.50   Min.   : 1.100  \n 1st Qu.: 1.70   1st Qu.: 1.05   1st Qu.: 2.900  \n Median : 5.70   Median : 3.40   Median : 4.400  \n Mean   :10.34   Mean   :10.51   Mean   : 8.718  \n 3rd Qu.:11.30   3rd Qu.:11.35   3rd Qu.: 8.100  \n Max.   :49.20   Max.   :48.10   Max.   :46.800  \n\nstr(data_clean)\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n# Visualizations\n\n# Bar Plot for varroa_mites by State\nggplot(data_clean, aes(x = state, y = varroa_mites)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Varroa Mites by State\", y = \"Percentage\", x = \"State\")\n\n\n\n\n\n\n\n\n\nstr(data_clean)\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n# Stacked Bar Plot\ndata_long &lt;- data_clean %&gt;%\n  gather(key = \"factor\", value = \"percentage\", -state)\n\nggplot(data_long, aes(x = state, y = percentage, fill = factor)) +\n  geom_bar(stat = \"identity\") +\n theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Factors Affecting Bees by State\", y = \"Percentage\", x = \"State\")\n\n\n\n\n\n\n\n\n\n# Heatmap\ndata_melt &lt;- melt(data_clean, id.vars = \"state\")\n\nggplot(data_melt, aes(x = variable, y = state, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"red\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Heatmap of Factors Affecting Bees\", y = \"State\", x = \"Factor\")\n\n\n\n\n\n\n\n\n\n# Pie Chart for the United States\nus_data &lt;- data_clean %&gt;%\n  filter(state == \"United States\") %&gt;%\n  dplyr::select(-state) %&gt;%\n  gather(key = \"factor\", value = \"percentage\")\n\nggplot(us_data, aes(x = \"\", y = percentage, fill = factor)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\") +\n  theme_void() +\n  labs(title = \"Distribution of Factors Affecting Bees in the United States\")\n\n\n\n\n\n\n\n\n\n# Correlation Analysis\ncor_data &lt;- cor(data_clean[,-1])\nprint(\"Correlation Matrix:\")\n\n[1] \"Correlation Matrix:\"\n\nprint(cor_data)\n\n             varroa_mites other_pests   disease pesticides     other    unknown\nvarroa_mites    1.0000000  0.62115999 0.5907042 0.65228365 0.6085037 0.55340334\nother_pests     0.6211600  1.00000000 0.1180091 0.06810399 0.3449221 0.05806591\ndisease         0.5907042  0.11800909 1.0000000 0.90369098 0.9194785 0.97833233\npesticides      0.6522836  0.06810399 0.9036910 1.00000000 0.8235853 0.86362322\nother           0.6085037  0.34492207 0.9194785 0.82358532 1.0000000 0.86993151\nunknown         0.5534033  0.05806591 0.9783323 0.86362322 0.8699315 1.00000000\n\n\n\n# Assumption Checks for Descriptive Analysis\nprint(\"Assumption Checks:\")\n\n[1] \"Assumption Checks:\"\n\n\n\n# Normality check\nshapiro_results &lt;- lapply(data_clean[-1], function(column) shapiro.test(column))\nprint(\"Shapiro-Wilk Test for Normality:\")\n\n[1] \"Shapiro-Wilk Test for Normality:\"\n\nprint(shapiro_results)\n\n$varroa_mites\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.87839, p-value = 0.09925\n\n\n$other_pests\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.72499, p-value = 0.0009831\n\n\n$disease\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.51395, p-value = 2.235e-06\n\n\n$pesticides\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.70512, p-value = 0.0005444\n\n\n$other\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.70797, p-value = 0.0005924\n\n\n$unknown\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.55542, p-value = 7.156e-06\n\n\n\n# Homogeneity of variances\n\nlevene_results &lt;- leveneTest(varroa_mites ~ state, data = data_clean)\n\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\nprint(\"Levene's Test for Homogeneity of Variances:\")\n\n[1] \"Levene's Test for Homogeneity of Variances:\"\n\nprint(levene_results)\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup 10     NaN    NaN\n       0               \n\n\n\n# Cluster Analysis\ndata_cluster &lt;- data_clean %&gt;%\n  filter(state != \"United States\") %&gt;%\n  dplyr::select(-state)\n\nhc &lt;- hclust(dist(data_cluster), method = \"complete\")\nplot(hc, labels = data_clean$state[data_clean$state != \"United States\"], main = \"Hierarchical Clustering of States\")\n\n\n\n\n\n\n\n\n\n# Principal Component Analysis (PCA)\ndata_pca &lt;- data_clean %&gt;%\n  filter(state != \"United States\") %&gt;%\n  dplyr::select(-state) %&gt;%\n  scale()\n\n\npca_result &lt;- prcomp(data_pca, center = TRUE, scale. = TRUE)\nsummary(pca_result)\n\nImportance of components:\n                          PC1    PC2    PC3     PC4     PC5     PC6\nStandard deviation     2.0647 1.1246 0.5666 0.34369 0.15432 0.09672\nProportion of Variance 0.7105 0.2108 0.0535 0.01969 0.00397 0.00156\nCumulative Proportion  0.7105 0.9213 0.9748 0.99447 0.99844 1.00000\n\n\n\nfviz_pca_var(pca_result, col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n\n\n\n\n\n\nstr(data_clean)\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n# Support Vector Machine (SVM)\nsvm_model &lt;- svm(varroa_mites ~ other_pests + disease + pesticides + other + unknown, data = data_clean)\nsummary(svm_model)\n\n\nCall:\nsvm(formula = varroa_mites ~ other_pests + disease + pesticides + \n    other + unknown, data = data_clean)\n\n\nParameters:\n   SVM-Type:  eps-regression \n SVM-Kernel:  radial \n       cost:  1 \n      gamma:  0.2 \n    epsilon:  0.1 \n\n\nNumber of Support Vectors:  10\n\n\n\n# Assuming predictions and data_clean$varroa_mites are already created\n\n# Example data\ndata_clean &lt;- data.frame(\n  Varroa_Mites = c(5, 10, 15, 20),\n  other_variable = c(2, 4, 6, 8)\n)\n\n# Fit a linear model\nmodel &lt;- lm(Varroa_Mites ~ other_variable, data = data_clean)\n\n# Generate predictions\npredictions &lt;- predict(model, newdata = data_clean)\n\n\n# Plot the data\nplot(predictions, data_clean$varroa_mites, \n     xlab = \"Predictions\", \n     ylab = \"Varroa Mites\", \n     main = \"Predictions vs Varroa Mites\",\n     las = 1, # makes y-axis labels horizontal\n     cex.lab = 1.2, # increases axis labels size\n     cex.axis = 1.2) # increases tick labels size\n\n\n\n\n\n\n\n\n\n\n3.3.8 Honey Bee Collecting Pollen\n\n\n\n\n\n\n\n3.3.9 Honey Bee with exposed bloated Varroa Mite\n\n\n\n\n\n\n# Write the cleaned data to a new CSV file\n\n\n# Assuming your dataset is named data_hcny\ndata_hcny_clean &lt;- data_hcny %&gt;% drop_na()\n\n\nwrite.csv(data_hcny_clean, here(\"hcnydata_cleaned.csv\"), row.names = FALSE)\n\n#write.csv(hcnydata_cleaned, \"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II Repository/P2-Practicum-II-Portfolio-EdwardCruz/hcny_CleanDraft.csv\", row.names = FALSE)"
  },
  {
    "objectID": "manuscript_final-2.html#full-analysis",
    "href": "manuscript_final-2.html#full-analysis",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.4 Full analysis",
    "text": "3.4 Full analysis\n##The full analysis is still pending###"
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html",
    "href": "Group 10 Final Project/manuscript_final-2.html",
    "title": "Group 10 Final Project",
    "section": "",
    "text": "Group Ten is conducting a comprehensive analysis of historical data from various public agencies to evaluate the impact of Varroa mites, American Foulbrood, and global warming on hive losses in the United States.This research utilizes extensive datasets from the National Agricultural Statistics Service, the Agricultural Statistics Board, and the United States Department of Agriculture (USDA), encompassing multiple years of data. The data highlights the topic on hive losses attributed to mites, bacterial infections, and environmental factors related to global warming. Through advanced data visualization techniques in R, we aim to demonstrate and validate the detrimental effects of these factors on honeybee colonies, highlighting the consequent implications for honey production and broader food security. Dennis and Kemp’s study on honey bee hive collapse [@hivecollapse] provides important insights into Allee effects and ecological resilience."
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html#description-of-data-and-data-source",
    "href": "Group 10 Final Project/manuscript_final-2.html#description-of-data-and-data-source",
    "title": "Group 10 Final Project",
    "section": "Description of data and data source",
    "text": "Description of data and data source\n\nData Sources\nBee colonies maintained by beekeepers are classified as livestock by the USDA due to their production of honey, a consumable food item, and their critical role in pollination during crop seasons. Given the importance of bee colonies in agriculture, we sourced data from two authoritative websites:\n\nUSDA National Agricultural Statistics Service (NASS):\n\nProvides comprehensive agricultural data, including statistics on honey production and colony health.\nSource: USDA - National Agricultural Statistics Service - Surveys - honey bee surveys and reports.\n\nBee Informed Partnership:\n\nOffers detailed insights and research on bee colony management and health, contributing valuable information on the status and trends of bee populations.\nSource: Index Catalog // USDA Economics, Statistics and Market Information System.\n\n\nThese sources provided reliable and extensive data necessary for analyzing the factors affecting bee colonies, honey production, and the broader implications for agriculture."
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html#questionshypotheses-to-be-addressed",
    "href": "Group 10 Final Project/manuscript_final-2.html#questionshypotheses-to-be-addressed",
    "title": "Group 10 Final Project",
    "section": "Questions/Hypotheses to be addressed",
    "text": "Questions/Hypotheses to be addressed\n\nHypotheses\nHypothesis: “The negative impacts of mites, bacterium, and global warming have detrimental effects on honeybee colonies in the United States and Texas, which in turn will lead to a decline in honey production and negatively impact food production.” This hypothesis can be tested and validated through a visualization of outcomes using R, demonstrating the relationship between these factors and their effects on honeybee colonies.\nNull Hypothesis (H0): The impacts of mites, bacterium, and global warming do not have a significant detrimental effect on honeybee colonies in the United States and Texas, and there is no consequent decline in honey production or negative impact on food production.\nAlternative Hypothesis (H1): The impacts of mites, bacterium, and global warming have a significant detrimental effect on honeybee colonies in the United States and Texas, leading to a decline in honey production and negatively impacting food production.\nThese hypotheses will be tested using various data visualization techniques in R, allowing us to explore and validate the relationships between these factors and their effects on honeybee colonies.\n\n\nBacterium Infection Foul Brood\n\n\n\n\n\n\n\nDead bees resulting from extreme heat found in hive\n\n#Citation section To cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in [@mckay2020; @mckay2020a].\n#Here are the BibTex entries for citations:\nUsing this in RMarkdown: #Make sure to save these entries in a file names’reference.bib’ and include it in your R Markdown document like this:"
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html#schematic-of-workflow",
    "href": "Group 10 Final Project/manuscript_final-2.html#schematic-of-workflow",
    "title": "Group 10 Final Project",
    "section": "Schematic of workflow",
    "text": "Schematic of workflow"
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html#data-aquisition",
    "href": "Group 10 Final Project/manuscript_final-2.html#data-aquisition",
    "title": "Group 10 Final Project",
    "section": "Data aquisition",
    "text": "Data aquisition\n\nData Acquisition\nWe sourced our data from the United States Department of Agriculture (USDA), leveraging their comprehensive and authoritative datasets. This data provided crucial information for our analysis, including statistics on honey production, colony health, and factors affecting bee populations. Utilizing USDA data ensured the reliability and relevance of our analysis, as it encompasses extensive, well-documented records pertinent to agricultural and ecological studies."
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html#data-import-and-cleaning",
    "href": "Group 10 Final Project/manuscript_final-2.html#data-import-and-cleaning",
    "title": "Group 10 Final Project",
    "section": "Data import and cleaning",
    "text": "Data import and cleaning\n\nData Cleaning and Preparation\nWe integrated data from multiple datasets to ensure a comprehensive analysis. The cleaning process involved several key steps:\n\nRemoval of Irrelevant Data:\n\nBlank Spaces: We eliminated any blank spaces within the datasets to ensure data integrity.\nNon-Pertinent Columns: Columns that were not directly related to our analysis objectives were removed to streamline the dataset.\n\nFiltering Observations:\n\nFocus on Relevant Data: We filtered out observations that did not directly pertain to our study, specifically those not related to the causes of bee colony losses.\nLoss Data: The dataset was refined to single out data representing the losses attributed to mites and climate change, allowing us to focus on these critical factors.\n\nExploratory Focus:\n\nState and Year Analysis: By focusing on data that represented colony losses across different states and years, we aimed to explore the geographical and temporal impacts of these factors on bee colonies.\n\n\nThese steps ensured that our dataset was clean, relevant, and well-prepared for subsequent analysis, enabling a focused exploration of the causes of bee colony losses and their relationship with mites and climate change.\n\n\n[1] \"C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/LeonelSalazar-P2-Portfolio\"\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of Boxplot\nThe boxplot illustrates the distribution of values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” across the years 2015 to 2017. A few key observations can be made from the data:\nCentral Tendency and Spread: - The median values for both types of losses (represented by the central line in each box) are relatively low across all years, indicating that the majority of losses are concentrated towards the lower end of the scale.\nYearly Comparison: - For the year 2015, the losses due to Colony Collapse Disorder and Deadout are higher compared to the subsequent years. This can be observed from the height of the boxes and the spread of the data points. - There is a noticeable decrease in the losses for both categories in 2016 and 2017. The boxes for these years are smaller and closer to the x-axis, indicating lower values.\nOutliers: - There are significant outliers present in all years for both types of losses. These outliers indicate that while most of the data points are clustered around the lower values, there are instances of very high losses that deviate from the norm.\nComparison between Loss Types: - The distribution of “LOSS, DEADOUT” appears to have more variability compared to “LOSS, COLONY COLLAPSE DISORDER”, particularly in 2015 and 2016. This is indicated by the wider interquartile ranges and more spread out data points.\nOverall Trends: - Overall, the boxplot suggests a decline in both types of losses from 2015 to 2017. However, the presence of outliers in each year indicates that there are still occasional severe loss events.\nThis highlights the trends and variations in honeybee colony losses due to Colony Collapse Disorder and Deadout over a three-year period, providing insights into the distribution and severity of these losses.\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of Scatterplot\nThe scatterplot visualizes the distribution of values across different states (represented by State ANSI codes) for the years 2015, 2016, and 2017. Several key observations can be drawn from the data:\nValue Distribution Across States: - The values vary significantly across different states. Most states have relatively low values, but there are notable exceptions with very high values.\nYearly Trends: - In 2015, there are multiple high values, especially at the lower end of the State ANSI codes. These are represented by the red dots. - In 2016, represented by green dots, there are fewer high values, but some extreme outliers are present, such as the one exceeding 200,000. - In 2017, indicated by blue dots, the values are generally lower compared to the previous years, with fewer extreme outliers.\nOutliers: - Each year has significant outliers that deviate from the general trend of low values across states. These outliers suggest occasional severe losses in specific states.\nState-Specific Trends: - Certain states (e.g., those with lower ANSI codes) exhibit higher variability and more frequent high values compared to others. - States towards the middle and higher end of the ANSI scale generally show more consistent, lower values.\nComparative Analysis: - The plot indicates that while overall losses may be high in certain states, the distribution and frequency of these high values vary across years. This suggests possible changes in factors affecting bee colony losses over time.\nThis shows the distribution and variability of bee colony losses across different states over three years, providing insights into state-specific trends and the presence of extreme loss events.\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of Boxplot\nThe boxplot illustrates the distribution of values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” across different periods of the year. The data is segmented into four periods: APR-THRU-JUN, JAN-THRU-MAR, JUL-THRU-SEP, and OCT-THRU-DEC. Several key observations can be made from the data:\nCentral Tendency and Spread: - The median values for both types of losses are low across all periods, indicating that most losses are concentrated towards the lower end of the scale. - The interquartile ranges (IQRs) for “LOSS, DEADOUT” are relatively consistent across periods, suggesting stable variability in losses throughout the year.\nPeriod Comparison: - The period JUL-THRU-SEP shows the highest median value for “LOSS, DEADOUT,” indicating that this period might be particularly challenging for bee colonies. - The period JAN-THRU-MAR has a few outliers but generally shows lower losses compared to other periods.\nOutliers: - Significant outliers are present in all periods for both types of losses. These outliers suggest occasional severe loss events that deviate significantly from the norm. - The period APR-THRU-JUN shows the highest outlier for “LOSS, COLONY COLLAPSE DISORDER,” indicating some extreme events during this time.\nComparison between Loss Types: - “LOSS, DEADOUT” consistently shows a wider range of values compared to “LOSS, COLONY COLLAPSE DISORDER” across all periods, suggesting more variability in deadout losses.\nOverall Trends: - The plot suggests that while losses occur throughout the year, there are specific periods (e.g., JUL-THRU-SEP) where losses might be higher. - The consistent presence of outliers indicates that, despite general trends, extreme loss events are a recurring issue.\nThis boxplot shows insights into the seasonal variability of bee colony losses due to Colony Collapse Disorder and Deadout, highlighting specific periods with higher losses and the presence of extreme loss events.\n\n\nOverall Analysis\n\nThe composition of honey indicates its high sugar content, essential for energy but also highlighting the presence of beneficial components like enzymes and vitamins.\nThe spread of Varroa mites map highlights the widespread and growing impact of these pests over time, emphasizing the need for ongoing management and control efforts.\nThe boxplots and scatterplots provide a detailed view of the variability and trends in colony losses due to different factors, both over time and across different regions. These plots suggest that while losses are a consistent issue, their magnitude and causes can vary widely, pointing to the need for tailored strategies to address colony health.\n\nThese visualizations collectively provide a comprehensive overview of the challenges faced by bee colonies, from composition and health to external threats like Varroa mites and seasonal variations in losses.\n\n\nVARROA MITE EXPOSED\n\n\n\n\n\n\n\nVARROA MITE\n\n\n\n\n\n\n\n[1] \"Descriptive Statistics:\"\n\n\n    state            varroa_mites    other_pests       disease      \n Length:11          Min.   : 8.00   Min.   : 1.70   Min.   : 0.100  \n Class :character   1st Qu.:13.45   1st Qu.: 3.20   1st Qu.: 0.750  \n Mode  :character   Median :26.80   Median : 6.40   Median : 1.000  \n                    Mean   :32.41   Mean   :11.55   Mean   : 6.718  \n                    3rd Qu.:48.85   3rd Qu.:11.85   3rd Qu.: 4.600  \n                    Max.   :67.20   Max.   :42.30   Max.   :47.800  \n   pesticides        other          unknown      \n Min.   : 0.50   Min.   : 0.50   Min.   : 1.100  \n 1st Qu.: 1.70   1st Qu.: 1.05   1st Qu.: 2.900  \n Median : 5.70   Median : 3.40   Median : 4.400  \n Mean   :10.34   Mean   :10.51   Mean   : 8.718  \n 3rd Qu.:11.30   3rd Qu.:11.35   3rd Qu.: 8.100  \n Max.   :49.20   Max.   :48.10   Max.   :46.800  \n\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\nDetailed Analysis:\n\nVarroa Mites:\n\nThe data ranges from 8.00 to 67.20 with a median value of 26.80 and a mean of 32.41. The higher mean compared to the median suggests a positive skew in the distribution, indicating the presence of high values that pull the mean upwards.\n\nOther Pests:\n\nThe values range from 1.70 to 42.30 with a median of 6.40 and a mean of 11.55. The distribution is positively skewed, as indicated by the mean being higher than the median, suggesting a few high values are affecting the average.\n\nDisease:\n\nThe range is from 0.100 to 47.800, with a median of 1.000 and a mean of 6.718. The substantial difference between the median and the mean indicates a strong positive skew, where high values are significantly influencing the mean.\n\nPesticides:\n\nThe values range from 0.50 to 49.20, with a median of 5.70 and a mean of 10.34. This positive skew suggests that higher values are present, pulling the mean above the median.\n\nOther:\n\nThe range is from 0.50 to 48.10, with a median of 3.40 and a mean of 10.51. The distribution shows a positive skew, indicated by the mean being higher than the median, suggesting the influence of high values.\n\nUnknown:\n\nThe values range from 1.100 to 46.800, with a median of 4.400 and a mean of 8.718. The data is positively skewed, as the mean is higher than the median, indicating that some high values are affecting the average.\n\n\nIn summary, all variables exhibit a positive skew in their distributions, with means consistently higher than medians. This suggests the presence of high outlier values in each category. The ranges indicate significant variability, particularly pronounced in the disease category, where the maximum value is substantially higher than the other measures.\n\n\n\n\n\n\n\n\n\nThe bar chart illustrates the percentage of varroa mites across different states. Ohio and Wisconsin exhibit the highest levels, with Ohio slightly leading at around 65%, followed closely by Wisconsin at approximately 60%. Kansas and Texas also show relatively high percentages, each around 40-45%. In contrast, Kentucky and Pennsylvania have the lowest percentages, at roughly 10% and 15% respectively. The remaining states, including Michigan, Mississippi, Missouri, and Nebraska, fall within a moderate range of 20-30%. Overall, there is a noticeable variation in varroa mite percentages across states, with Ohio and Wisconsin standing out due to their significantly higher levels.\n\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n\n\n\n\n\n\n\n\nThe bar chart represents various factors affecting bees across different states, with each factor color-coded. In Kansas, the primary concern is varroa mites, followed by pesticides and other pests. Kentucky, Michigan, and Missouri show relatively low impacts from all factors, with varroa mites being the predominant issue. Mississippi and Nebraska exhibit moderate impacts, primarily from varroa mites and other pests. Ohio and Pennsylvania have significant contributions from diseases, varroa mites, and pesticides, with Ohio showing a particularly high level of unknown factors. Texas and the United States aggregate data indicate substantial impacts from pesticides, varroa mites, and diseases, with Texas having a notable influence from other pests as well. Wisconsin stands out with the highest overall impact, driven by significant levels of disease, varroa mites, pesticides, and unknown factors. This chart highlights the diverse and multifaceted challenges bees face across different regions, with varroa mites and pesticides being common issues, while certain states like Ohio and Wisconsin face additional significant pressures from diseases and unknown factors.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n[1] \"Correlation Matrix:\"\n\n\n             varroa_mites other_pests   disease pesticides     other    unknown\nvarroa_mites    1.0000000  0.62115999 0.5907042 0.65228365 0.6085037 0.55340334\nother_pests     0.6211600  1.00000000 0.1180091 0.06810399 0.3449221 0.05806591\ndisease         0.5907042  0.11800909 1.0000000 0.90369098 0.9194785 0.97833233\npesticides      0.6522836  0.06810399 0.9036910 1.00000000 0.8235853 0.86362322\nother           0.6085037  0.34492207 0.9194785 0.82358532 1.0000000 0.86993151\nunknown         0.5534033  0.05806591 0.9783323 0.86362322 0.8699315 1.00000000\n\n\n\n\n\n\n\n\n\nThe correlation matrix heatmap illustrates the relationships between different variables affecting bees, with the intensity of the color indicating the strength of the correlation. Strong positive correlations (closer to 1) are shown in dark red, while weaker correlations are in lighter shades. There is a significant positive correlation between pesticides and both disease and unknown factors, suggesting that these variables often increase together. Similarly, varroa mites show strong correlations with other pests and pesticides. Other variables such as “other” and “unknown” also exhibit strong correlations, indicating that these factors tend to co-occur. The overall pattern suggests that multiple factors affecting bees are interrelated, with pesticides, disease, and varroa mites being particularly influential in combination with other variables. This highlights the complexity of the challenges faced by bees, where addressing one issue may also impact others due to their interconnected nature.\n\n# Load necessary library\nlibrary(e1071)\nhere()\n\n[1] \"C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/LeonelSalazar-P2-Portfolio\"\n\n# Calculate skewness for each column in the dataset (excluding the first column)\nskewness_results &lt;- sapply(data_hcny_clean[-1], skewness)\n\n# Print skewness results\nprint(\"Skewness of each variable:\")\n\n[1] \"Skewness of each variable:\"\n\nprint(skewness_results)\n\nvarroa_mites  other_pests      disease   pesticides        other      unknown \n   0.3997626    1.2811007    2.2437846    1.7238178    1.4418311    2.2328566 \n\n# If you want to visualize skewness using a bar plot:\nskewness_df &lt;- data.frame(Variable = names(skewness_results), Skewness = skewness_results)\nggplot(skewness_df, aes(x = Variable, y = Skewness)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Skewness of Variables\", x = \"Variables\", y = \"Skewness\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n\n\n\n\n\n\n\n\nThe bar chart illustrates the skewness of various variables affecting bees, with skewness measuring the asymmetry of data distributions. The variable “disease” exhibits the highest skewness, slightly above 2.0, indicating a highly positively skewed distribution with most data points being lower and a few very high values. “Unknown” also shows a high skewness close to 2.0, reflecting a similar pattern of asymmetry. “Pesticides” have a skewness around 1.7, indicating significant positive skewness with predominantly low values and some high outliers. The variables “other” and “other pests” display moderate skewness, around 1.5, suggesting less extreme but noticeable asymmetry. In contrast, “varroa mites” exhibit the lowest skewness, just above 0.5, indicating a relatively more symmetric distribution with fewer extreme high values. Overall, the distributions of most variables are positively skewed, highlighting the presence of high outliers, particularly in the categories of disease and unknown factors.\n\n# Load necessary library\nlibrary(MASS)\n\n\nAttaching package: 'MASS'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\nlibrary(ggplot2)\nlibrary(e1071)\n\n# Define a function to apply different transformations\ntransform_data &lt;- function(data) {\n  data_transformed &lt;- data\n  \n  for (col in colnames(data)) {\n    if (min(data[[col]]) &gt; 0) {\n      # Apply log transformation\n      data_transformed[[col]] &lt;- log(data[[col]])\n    } else {\n      # Apply square root transformation\n      data_transformed[[col]] &lt;- sqrt(data[[col]] - min(data[[col]]) + 1)\n    }\n    \n    # Apply Box-Cox transformation\n    bc_transform &lt;- boxcox(data[[col]] ~ 1, plotit = FALSE)\n    lambda &lt;- bc_transform$x[which.max(bc_transform$y)]\n    if (lambda == 0) {\n      data_transformed[[col]] &lt;- log(data[[col]])\n    } else {\n      data_transformed[[col]] &lt;- (data[[col]]^lambda - 1) / lambda\n    }\n  }\n  \n  return(data_transformed)\n}\n\n# Assuming data_hcny_clean is your dataset\ndata_hcny_clean_transformed &lt;- transform_data(data_hcny_clean[-1])\n\n# Calculate skewness for transformed data\nskewness_results_transformed &lt;- sapply(data_hcny_clean_transformed, skewness)\n\n# Print skewness results for transformed data\nprint(\"Skewness of each variable after transformation:\")\n\n[1] \"Skewness of each variable after transformation:\"\n\nprint(skewness_results_transformed)\n\nvarroa_mites  other_pests      disease   pesticides        other      unknown \n 0.007116103  0.063472071 -0.039928405 -0.075767227  0.025376550 -0.043267178 \n\n# Visualize skewness using a bar plot\nskewness_df_transformed &lt;- data.frame(Variable = names(skewness_results_transformed), Skewness = skewness_results_transformed)\nggplot(skewness_df_transformed, aes(x = Variable, y = Skewness)) +\n  geom_bar(stat = \"identity\") +\n  theme_minimal() +\n  labs(title = \"Skewness of Variables after Transformation\", x = \"Variables\", y = \"Skewness\") +\n  theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1))\n\n\n\n\n\n\n\n# Normality check\nshapiro_results &lt;- lapply(data_hcny_clean_transformed[-1], function(column) shapiro.test(column))\nprint(\"Shapiro-Wilk Test for Normality:\")\n\n[1] \"Shapiro-Wilk Test for Normality:\"\n\nprint(shapiro_results)\n\n$other_pests\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.9636, p-value = 0.8157\n\n\n$disease\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.96171, p-value = 0.7929\n\n\n$pesticides\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.96448, p-value = 0.8261\n\n\n$other\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.94942, p-value = 0.6366\n\n\n$unknown\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.98713, p-value = 0.993\n\n\nThe two sets of skewness values show the effect of data transformations on the distributions of various variables affecting bees. Initially, the skewness values were as follows:\n\nVarroa Mites: 0.3997626\nOther Pests: 1.2811007\nDisease: 2.2437846\nPesticides: 1.7238178\nOther: 1.4418311\nUnknown: 2.2328566\n\nThese values indicate that most variables had positive skewness, suggesting asymmetrical distributions with a long tail on the right.\nAfter transformations, the skewness values changed to:\n\nVarroa Mites: 0.007116103\nOther Pests: 0.063472071\nDisease: -0.039928405\nPesticides: -0.075767227\nOther: 0.025376550\nUnknown: -0.043267178\n\nThe transformations significantly reduced the skewness for all variables, resulting in values closer to zero. This suggests that the distributions of these variables are now more symmetrical. Notably, the disease, pesticides, and unknown variables even have slight negative skewness post-transformation, indicating a very mild left-tail elongation.\nIn summary, the applied transformations effectively normalized the distributions of the variables, reducing the initial positive skewness and bringing the values closer to a normal distribution. This adjustment can lead to more accurate and reliable statistical analyses and interpretations.\n\n\n\n\n\n\n\n\n\nThe dendrogram represents the results of hierarchical clustering of states based on variables affecting bees. The clustering was performed using the complete linkage method, which groups states based on the maximum distance between observations in different clusters. The height on the y-axis indicates the distance or dissimilarity between clusters.\nFrom the dendrogram, Wisconsin stands out as the most distinct state, separated from the rest at the highest height, suggesting it has the most unique profile concerning the factors analyzed. Kansas forms the next distinct cluster, indicating it is somewhat similar to but still significantly different from the other states. Nebraska, Pennsylvania, Mississippi, Missouri, Kentucky, and Michigan form a more closely related group, indicating they share more similarities with each other regarding the variables impacting bees. Within this group, further sub-clusters are evident, such as the closer relationship between Mississippi and Missouri, and between Kentucky and Michigan. Ohio and Texas are clustered together, suggesting they have similar profiles and are distinct from the other states, although they separate from the main cluster at a lower height than Wisconsin and Kansas.\nIn summary, the hierarchical clustering reveals distinct groups of states with varying degrees of similarity concerning factors affecting bees. Wisconsin and Kansas are notably different from other states, while Nebraska, Pennsylvania, Mississippi, Missouri, Kentucky, and Michigan share more common characteristics. Ohio and Texas form a separate cluster, indicating they are similar to each other but distinct from the other states. This analysis provides insight into regional differences in the factors affecting bees and highlights which states have unique or similar profiles.\n\n\nImportance of components:\n                          PC1    PC2    PC3     PC4     PC5     PC6\nStandard deviation     2.0647 1.1246 0.5666 0.34369 0.15432 0.09672\nProportion of Variance 0.7105 0.2108 0.0535 0.01969 0.00397 0.00156\nCumulative Proportion  0.7105 0.9213 0.9748 0.99447 0.99844 1.00000\n\n\nThe table presents the results of a Principal Component Analysis (PCA), detailing the importance of each principal component (PC) derived from the dataset. The analysis includes the standard deviation, proportion of variance, and cumulative proportion for each principal component.\nDetailed Report:\n\nStandard Deviation:\n\nThe standard deviation of each principal component measures the spread of the data along that component’s axis. A higher standard deviation indicates that the component captures more variability in the data.\nPC1 has the highest standard deviation at 2.0647, suggesting it captures the most variance.\nPC2 has a standard deviation of 1.1246, which is significantly lower than PC1 but still substantial.\nPC3 has a standard deviation of 0.5666.\nPC4, PC5, and PC6 have lower standard deviations at 0.34369, 0.15432, and 0.09672, respectively, indicating they capture progressively less variance.\n\nProportion of Variance:\n\nThis metric indicates the percentage of the total variance in the data explained by each principal component.\nPC1 explains 71.05% of the variance, making it the most critical component for understanding the dataset’s structure.\nPC2 explains 21.08% of the variance. Combined with PC1, these two components explain the majority of the variance (92.13%).\nPC3 explains 5.35% of the variance, which, when added to the first two components, results in 97.48% of the variance being explained.\nPC4 explains 1.97% of the variance.\nPC5 and PC6 explain very small proportions of the variance, at 0.39% and 0.16%, respectively.\n\nCumulative Proportion:\n\nThis metric represents the cumulative percentage of variance explained by the principal components up to that point.\nPC1 alone accounts for 71.05% of the total variance.\nAdding PC2 increases the cumulative variance explained to 92.13%.\nIncluding PC3 results in 97.48% of the variance being explained.\nPC4 increases the cumulative proportion to 99.45%.\nPC5 and PC6 contribute very little additional variance, bringing the cumulative proportions to 99.84% and 100%, respectively.\n\n\nSummary: The PCA results indicate that the first principal component (PC1) captures the majority of the variability in the dataset (71.05%). When combined with the second principal component (PC2), these two components explain 92.13% of the total variance. The first three components together explain 97.48% of the variance. Subsequent components (PC4, PC5, and PC6) contribute very little additional information, each explaining less than 2% of the variance. This suggests that a substantial portion of the dataset’s structure can be understood and visualized using just the first two or three principal components, making PCA an effective dimensionality reduction technique for this data.\n\n\n\n\n\n\n\n\n\nThe PCA biplot visualizes the contributions of different variables to the first two principal components, Dim1 and Dim2, which explain 71.1% and 21.1% of the variance, respectively. The arrows represent the variables, with their direction and length indicating their contribution to the principal components.\n“Other pests” is strongly aligned with Dim2 and has a significant contribution to this component, indicating it is a key factor in the variance captured by Dim2. “Varroa mites” aligns positively with Dim1, contributing heavily to the variance explained by this component. Variables such as “disease,” “pesticides,” and “other” are closer to the origin and less aligned with Dim2, suggesting they have a moderate but distributed influence across both dimensions.\nThe color gradient, representing the contribution values, shows that “other pests” and “varroa mites” have higher contributions (around 17.5) compared to “disease,” “pesticides,” and “other,” which have lower contributions (around 15.5). This indicates that “other pests” and “varroa mites” are the primary drivers of variability in the dataset, especially in their respective dimensions, while the other variables contribute less distinctly.\nOverall, the biplot highlights that the majority of the variability in the dataset is explained by “varroa mites” along Dim1 and “other pests” along Dim2, with other variables having a more balanced but less pronounced impact on these principal components. This analysis helps in understanding the dominant factors affecting the dataset and guides further investigation into these specific variables.\n\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n\nSupport Vector Machines with Radial Basis Function Kernel \n\n11 samples\n 5 predictor\n\nPre-processing: centered (5), scaled (5) \nResampling: Cross-Validated (10 fold) \nSummary of sample sizes: 10, 10, 10, 10, 10, 10, ... \nResampling results across tuning parameters:\n\n  C     RMSE      Rsquared  MAE     \n  0.25  16.83932  1         16.76263\n  0.50  14.22336  1         14.04346\n  1.00  11.08410  1         10.94289\n  2.00  10.44775  1         10.35235\n  4.00  10.91682  1         10.87747\n\nTuning parameter 'sigma' was held constant at a value of 0.7168698\nRMSE was used to select the optimal model using the smallest value.\nThe final values used for the model were sigma = 0.7168698 and C = 2.\n\n\n      sigma    C     RMSE Rsquared      MAE   RMSESD RsquaredSD    MAESD\n1 0.7168698 0.25 16.83932        1 16.76263 10.19402         NA 10.14058\n2 0.7168698 0.50 14.22336        1 14.04346 10.46309         NA 10.36239\n3 0.7168698 1.00 11.08410        1 10.94289 10.51085         NA 10.44111\n4 0.7168698 2.00 10.44775        1 10.35235 10.39667         NA 10.35644\n5 0.7168698 4.00 10.91682        1 10.87747 10.02880         NA 10.01078\n\n\nThe table presents the performance metrics of a model evaluated with different values of the parameter (C), while keeping the parameter () constant at 0.05440357. The metrics include RMSE (Root Mean Square Error), Rsquared (Coefficient of Determination), MAE (Mean Absolute Error), RMSESD (Standard Deviation of RMSE), and MAESD (Standard Deviation of MAE).\n\nRMSE: This metric measures the average magnitude of the error. It ranges from 17.48534 to 19.02087, with the lowest RMSE observed at (C = 0.50) (17.48534), indicating better model performance at this value.\nRsquared: This value is consistently 1 across all values of (C), suggesting the model explains all the variability in the response data, which might indicate an overfitted model.\nMAE: Similar to RMSE, MAE measures the average magnitude of the errors in a dataset but without considering their direction. It ranges from 17.13200 to 18.82962, with the lowest MAE also observed at (C = 4.00).\nRMSESD and MAESD: These metrics represent the standard deviations of RMSE and MAE, respectively. Lower values indicate more consistent model performance. RMSESD ranges from 7.993244 to 9.992720, and MAESD ranges from 7.683640 to 9.676665. The lowest values are observed at (C = 1.00) for RMSESD and at (C = 1.00) for MAESD, suggesting more stable performance at this value of (C).\n\nIn summary, the model’s performance metrics indicate that a (C) value of 0.50 yields the lowest RMSE, while a (C) value of 4.00 provides the lowest MAE. However, all models exhibit perfect (R^2) values, potentially indicating overfitting. The standard deviations of the errors suggest that a (C) value of 1.00 offers the most consistent performance. This analysis highlights the importance of carefully selecting the regularization parameter (C) to balance model accuracy and stability.\n\n\n\n\n\n\n\n\n\nThe scatter plot visualizes the relationship between predicted values and the actual values of varroa mites. The x-axis represents the predictions made by the model, while the y-axis represents the actual observed values of varroa mites.\nIn the plot, there are four data points: - A point at (1.0, 5), indicating an actual varroa mite value of 5 for a prediction of 1.0. - A point at (2.0, 10), indicating an actual varroa mite value of 10 for a prediction of 2.0. - A point at (3.0, 15), indicating an actual varroa mite value of 15 for a prediction of 3.0. - A point at (4.0, 20), indicating an actual varroa mite value of 20 for a prediction of 4.0.\nThe linear arrangement of the points suggests a direct, proportional relationship between the predictions and the actual values. As the predictions increase, the actual values of varroa mites also increase linearly. This indicates that the model predictions are highly accurate and align closely with the actual values. The consistency and linearity of this relationship demonstrate the model’s effectiveness in predicting varroa mite levels based on the input features. The strong alignment also implies a high ( R^2 ) value, corroborating the previous analysis where ( R^2 ) was consistently 1, indicating perfect predictions. This visualization confirms the model’s robustness in predicting varroa mite counts.\nSummary and Conclusion\nThroughout this series of analyses, we have delved into multiple aspects of the dataset concerning various factors affecting bees, with a particular focus on varroa mites. Here is a professional summary of our findings and analyses:\nDescriptive Statistics and Data Distribution: - Initial descriptive statistics revealed that all variables, such as varroa mites, other pests, disease, and pesticides, exhibited positive skewness, indicating the presence of high outliers in the data. Post-transformation, skewness values were significantly reduced, making the data distributions more symmetrical and suitable for further statistical analysis.\nVisualization of Varroa Mites by State: - Bar charts highlighted significant variations in varroa mite percentages across states, with Ohio and Wisconsin showing the highest levels. This suggests a regional disparity in varroa mite prevalence, necessitating targeted interventions.\nFactors Affecting Bees: - A multi-variable bar chart indicated that in addition to varroa mites, factors such as pesticides and diseases also played critical roles. Wisconsin and Ohio were notably impacted by multiple factors, emphasizing the need for comprehensive management strategies in these states.\nCorrelation Analysis: - A heatmap depicting the correlation matrix revealed strong interrelationships between several variables, particularly between pesticides, disease, and unknown factors. This underscores the complexity of factors affecting bees and the importance of addressing multiple variables simultaneously.\nSkewness Analysis: - The skewness of various variables before and after transformation indicated that initial data distributions were heavily skewed. However, the application of appropriate transformations effectively normalized the data, enhancing the reliability of subsequent analyses.\nHierarchical Clustering: - Hierarchical clustering of states based on the factors affecting bees revealed distinct clusters. Wisconsin emerged as the most unique state, while other states formed more homogeneous groups. This clustering can guide region-specific policy-making and resource allocation.\nPrincipal Component Analysis (PCA): - PCA results indicated that the first two principal components accounted for over 92% of the variance in the dataset. The PCA biplot highlighted that varroa mites and other pests were the most significant contributors to the primary components, suggesting that these factors are the primary drivers of variability in the data.\nModel Performance Metrics: - Evaluation of model performance across different values of parameter (C) showed that the model performed best at (C = 0.50) in terms of RMSE, while consistency was highest at (C = 1.00). The consistently perfect (R^2) values indicated potential overfitting.\nPredictions vs. Actual Values: - The scatter plot of predictions versus actual varroa mite values demonstrated a strong linear relationship, confirming the model’s high accuracy and effectiveness in predicting varroa mite levels.\nIn conclusion, our comprehensive analysis has provided deep insights into the factors affecting bee populations, highlighting significant regional variations and the complex interplay of multiple stressors. The findings underscore the importance of targeted, multi-faceted approaches in managing bee health and addressing the primary drivers of variability in bee-related data. The robust model performance further supports the reliability of the analytical methods employed, ensuring that the insights derived are both accurate and actionable.\n\n\nHoney Bee Collecting Pollen\n\n\n\n\n\n\n\nHoney Bee with exposed bloated Varroa Mite"
  },
  {
    "objectID": "Group 10 Final Project/manuscript_final-2.html#full-analysis",
    "href": "Group 10 Final Project/manuscript_final-2.html#full-analysis",
    "title": "Group 10 Final Project",
    "section": "Full analysis",
    "text": "Full analysis\n##The full analysis is still pending###"
  },
  {
    "objectID": "data-exercise/data-exercise.html",
    "href": "data-exercise/data-exercise.html",
    "title": "Data Exercise",
    "section": "",
    "text": "I am not 100% done, i still need to add comments and analysis for the models. I will plan on doing this by the end of the 4th of july weekend.\n\n# Load required packages\nlibrary(ggplot2)  # For advanced plotting\n\nWarning: package 'ggplot2' was built under R version 4.3.3\n\nlibrary(dplyr)    # For data manipulation\n\nWarning: package 'dplyr' was built under R version 4.3.3\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(tidyr)    # For data tidying\n\nWarning: package 'tidyr' was built under R version 4.3.3\n\nlibrary(tidyverse)\n\nWarning: package 'stringr' was built under R version 4.3.2\n\n\nWarning: package 'lubridate' was built under R version 4.3.2\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ readr     2.1.4\n✔ lubridate 1.9.3     ✔ stringr   1.5.1\n✔ purrr     1.0.2     ✔ tibble    3.2.1\n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\n\n\nSet seed for reproducibility\n\nset.seed(789)\n\n\n\nNumber of observations\n\nn &lt;- 3000\n\n\n\nGenerate variables\n\nGender &lt;- sample(c(\"Male\", \"Female\"), n, replace = TRUE)\nAge &lt;- round(rnorm(n, mean = 45, sd = 10))\nIncome &lt;- round(rnorm(n, mean = 60000, sd = 20000))\nEducation &lt;- sample(c(\"High School\", \"Bachelor's\", \"Master's\", \"PhD\"), n, replace = TRUE, prob = c(0.25, 0.4, 0.25, 0.1))\nHomeOwner &lt;- sample(c(\"Yes\", \"No\"), n, replace = TRUE, prob = c(0.7, 0.3))\nRetired &lt;- sample(c(\"Yes\", \"No\"), n, replace = TRUE, prob = c(0.15, 0.85))\n\n\n\nCombine into a data frame\n\ndata &lt;- data.frame(Gender, Age, Income, Education, HomeOwner, Retired)\n\n\n\nSummary and structure of the dataset\n\nsummary(data)\n\n    Gender               Age            Income        Education        \n Length:3000        Min.   : 5.00   Min.   : -3403   Length:3000       \n Class :character   1st Qu.:39.00   1st Qu.: 46870   Class :character  \n Mode  :character   Median :45.00   Median : 59658   Mode  :character  \n                    Mean   :45.13   Mean   : 60049                     \n                    3rd Qu.:52.00   3rd Qu.: 73857                     \n                    Max.   :84.00   Max.   :127353                     \n  HomeOwner           Retired         \n Length:3000        Length:3000       \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\nstr(data)\n\n'data.frame':   3000 obs. of  6 variables:\n $ Gender   : chr  \"Male\" \"Female\" \"Female\" \"Female\" ...\n $ Age      : num  46 53 46 25 45 45 41 30 44 29 ...\n $ Income   : num  62150 30435 87254 15270 65493 ...\n $ Education: chr  \"Master's\" \"Bachelor's\" \"Master's\" \"Bachelor's\" ...\n $ HomeOwner: chr  \"No\" \"Yes\" \"No\" \"No\" ...\n $ Retired  : chr  \"No\" \"No\" \"No\" \"No\" ...\n\n\n\n# Convert 'HomeOwner' from character to factor with levels \"No\" and \"Yes\"\ndata$HomeOwner &lt;- factor(data$HomeOwner, levels = c(\"No\", \"Yes\"))\n\n# Show structure of 'HomeOwner' after conversion\nstr(data$HomeOwner)\n\n Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 1 2 2 2 1 2 2 ...\n\ndata$Retired &lt;- factor(data$HomeOwner, levels = c(\"No\", \"Yes\"))\n\n\n# Frequency table for categorical variables\ntable(data$Gender)\n\n\nFemale   Male \n  1516   1484 \n\ntable(data$Education)\n\n\n Bachelor's High School    Master's         PhD \n       1195         744         783         278 \n\ntable(data$HomeOwner)\n\n\n  No  Yes \n 926 2074 \n\ntable(data$Retired)\n\n\n  No  Yes \n 926 2074 \n\n\n\n\nCreated histogram and box plot to check for normality and outliers.\n\n# Histograms for Age and Income\npar(mfrow=c(1,2))  # Arrange plots in one row, two columns\n# Histogram for Age\nhist(data$Age, \n     main = \"Age Distribution\", \n     xlab = \"Age\", \n     ylab = \"Frequency\",\n     col = \"skyblue\",  # Histogram color\n     border = \"black\"  # Border color\n)\n\n# Histogram for Income\nhist(data$Income, \n     main = \"Income Distribution\", \n     xlab = \"Income\", \n     ylab = \"Frequency\",\n     col = \"lightgreen\",  # Histogram color\n     border = \"black\"     # Border color\n)\n\n\n\n\n\n\n\n# Box plot for Age\nboxplot(data$Age,\n        main = \"Box Plot of Age\",\n        ylab = \"Age\",\n        col = \"skyblue\",  # Box color\n        border = \"black\", # Border color\n        horizontal = FALSE  # Vertical box plot\n)\n\n# Box plot for Income\nboxplot(data$Income,\n        main = \"Box Plot of Income\",\n        ylab = \"Income\",\n        col = \"lightgreen\",  # Box color\n        border = \"black\",    # Border color\n        horizontal = FALSE   # Vertical box plot\n)\n\n\n\n\n\n\n\n\n\n\nBarplots to explore visually the categorical variables.\n\n# Bar plots for categorical variables\npar(mfrow=c(2,2))  # Arrange plots in a 2x2 grid\nbarplot(table(data$Gender), main=\"Gender Distribution\")\nbarplot(table(data$Education), main=\"Education Level\")\nbarplot(table(data$HomeOwner), main=\"Home Ownership\")\nbarplot(table(data$Retired), main=\"Retirement Status\")\n\n\n\n\n\n\n\n\n\n# Model 1: Income ~ Age\nmodel1 &lt;- lm(Age ~ Age, data = data)\n\nWarning in model.matrix.default(mt, mf, contrasts): the response appeared on\nthe right-hand side and was dropped\n\n\nWarning in model.matrix.default(mt, mf, contrasts): problem with term 1 in\nmodel.matrix: no columns are assigned\n\n# Summary of the model\nsummary(model1)\n\n\nCall:\nlm(formula = Age ~ Age, data = data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-40.126  -6.126  -0.126   6.874  38.874 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  45.1257     0.1809   249.4   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 9.909 on 2999 degrees of freedom\n\nstr(data)\n\n'data.frame':   3000 obs. of  6 variables:\n $ Gender   : chr  \"Male\" \"Female\" \"Female\" \"Female\" ...\n $ Age      : num  46 53 46 25 45 45 41 30 44 29 ...\n $ Income   : num  62150 30435 87254 15270 65493 ...\n $ Education: chr  \"Master's\" \"Bachelor's\" \"Master's\" \"Bachelor's\" ...\n $ HomeOwner: Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 1 2 2 2 1 2 2 ...\n $ Retired  : Factor w/ 2 levels \"No\",\"Yes\": 1 2 1 1 2 2 2 1 2 2 ...\n\n\n\n# Model 2: Income ~ Age + Gender\nmodel2 &lt;- lm(Income ~ Age + Gender, data = data)\n\n# Summary of the model\nsummary(model2)\n\n\nCall:\nlm(formula = Income ~ Age + Gender, data = data)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-63702 -13166   -448  13749  67607 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) 58614.86    1732.34  33.836   &lt;2e-16 ***\nAge            37.70      36.51   1.032    0.302    \nGenderMale   -539.80     723.52  -0.746    0.456    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 19810 on 2997 degrees of freedom\nMultiple R-squared:  0.0005533, Adjusted R-squared:  -0.0001137 \nF-statistic: 0.8295 on 2 and 2997 DF,  p-value: 0.4363\n\n\n\n# Model 3: HomeOwner ~ Age + Income + Education\nmodel3 &lt;- glm(HomeOwner ~ Age + Income + Education, data = data, family = binomial)\n\n# Summary of the model\nsummary(model3)\n\n\nCall:\nglm(formula = HomeOwner ~ Age + Income + Education, family = binomial, \n    data = data)\n\nCoefficients:\n                       Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)           8.411e-01  2.228e-01   3.775  0.00016 ***\nAge                  -5.543e-04  3.991e-03  -0.139  0.88954    \nIncome               -2.389e-07  1.997e-06  -0.120  0.90477    \nEducationHigh School  3.420e-02  1.014e-01   0.337  0.73603    \nEducationMaster's    -2.118e-02  9.921e-02  -0.213  0.83098    \nEducationPhD          1.872e-02  1.445e-01   0.130  0.89689    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 3708.2  on 2999  degrees of freedom\nResidual deviance: 3707.9  on 2994  degrees of freedom\nAIC: 3719.9\n\nNumber of Fisher Scoring iterations: 4\n\n\n\n# Model 4: Retired ~ Age + Income + Gender + Education\nmodel4 &lt;- glm(Retired ~ Age + Income + Gender + Education, data = data, family = binomial)\n\n# Summary of the model\nsummary(model4)\n\n\nCall:\nglm(formula = Retired ~ Age + Income + Gender + Education, family = binomial, \n    data = data)\n\nCoefficients:\n                       Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)           8.306e-01  2.273e-01   3.654 0.000258 ***\nAge                  -5.329e-04  3.992e-03  -0.134 0.893794    \nIncome               -2.325e-07  1.997e-06  -0.116 0.907343    \nGenderMale            1.856e-02  7.910e-02   0.235 0.814461    \nEducationHigh School  3.407e-02  1.014e-01   0.336 0.736996    \nEducationMaster's    -2.109e-02  9.921e-02  -0.213 0.831619    \nEducationPhD          1.910e-02  1.445e-01   0.132 0.894839    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 3708.2  on 2999  degrees of freedom\nResidual deviance: 3707.8  on 2993  degrees of freedom\nAIC: 3721.8\n\nNumber of Fisher Scoring iterations: 4"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "",
    "text": "Group Ten is conducting a comprehensive analysis of historical data from various public agencies to evaluate the impact of Varroa mites, American Foulbrood, and global warming on hive losses in the United States.This research utilizes extensive datasets from the National Agricultural Statistics Service, the Agricultural Statistics Board, and the United States Department of Agriculture (USDA), encompassing multiple years of data. The data highlights the topic on hive losses attributed to mites, bacterial infections, and environmental factors related to global warming. Through advanced data visualization techniques in R, we aim to demonstrate and validate the detrimental effects of these factors on honeybee colonies, highlighting the consequent implications for honey production and broader food security. Dennis and Kemp’s study on honey bee hive collapse [@hivecollapse] provides important insights into Allee effects and ecological resilience."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html#description-of-data-and-data-source",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html#description-of-data-and-data-source",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "2.1 Description of data and data source",
    "text": "2.1 Description of data and data source\nBee colonies maintained by beekeepers are considered livestock by the USDA due to their ability to produce honey, a consumable food item, and their essential role in assisting farmers with pollination crop seasons. Given the importance of bee colonies in agriculture, it was logical to source data from the following two authoritative websites: 1. USDA National Agricultural Statistics Service (NASS): This site provides comprehensive agricultural data, including statistics on honey production and colony health. 2. Bee Informed Partnership: This site offers detailed insights and research on bee colony management and health, contributing valuable information on the status and trends of bee populations. Index Catalog // USDA Economics, Statistics and Market Information System. (n.d.-a). https://usda.library.cornell.edu/catalog?f%5Bkeywords_sim%5D%5B%5D=honey+bees&locale=en\nUSDA - National Agricultural Statistics Service - Surveys - honey bee surveys and reports. (n.d.). https://www.nass.usda.gov/Surveys/Guide_to_NASS_Surveys/Bee_and_Honey/"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html#questionshypotheses-to-be-addressed",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html#questionshypotheses-to-be-addressed",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "2.2 Questions/Hypotheses to be addressed",
    "text": "2.2 Questions/Hypotheses to be addressed\nHypothesis: “The negative impacts of mites, bacterium, and global warming have detrimental effects on honeybee colonies in the United States and Texas, which in turn will lead to a decline in honey production and negatively impact food production.” This hypothesis can be tested and validated through a visualization of outcomes using R, demonstrating the relationship between these factors and their effects on honeybee colonies.\n\n2.2.1 Bacterium Infection Foul Brood\n\n\n\n\n\n\n\n2.2.2 Dead bees resulting from extreme heat found in hive\n\n#Citation section To cite other work (important everywhere, but likely happens first in introduction), make sure your references are in the bibtex file specified in the YAML header above and have the right bibtex key. Then you can include like this:\nExamples of reproducible research projects can for instance be found in [@mckay2020; @mckay2020a].\n#Here are the BibTex entries for citations:\nUsing this in RMarkdown: #Make sure to save these entries in a file names’reference.bib’ and include it in your R Markdown document like this:"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html#schematic-of-workflow",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html#schematic-of-workflow",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.1 Schematic of workflow",
    "text": "3.1 Schematic of workflow\nSometimes you might want to show a schematic diagram/figure that was not created with code (if you can do it with code, do it). ?@fig-schematic is an example of some - completely random/unrelated - schematic that was generated with Biorender. We store those figures in the assets folder.\n\n#knitr::include_graphics(here(\"assets\",\"antigen-recognition.png\"))"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html#data-aquisition",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html#data-aquisition",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.2 Data aquisition",
    "text": "3.2 Data aquisition\nWe got our data from the United States Department of Agriculture (USDA)."
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html#data-import-and-cleaning",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html#data-import-and-cleaning",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.3 Data import and cleaning",
    "text": "3.3 Data import and cleaning\nWe decided to clean out our data from a few different datasets. We had to remove blank spaces and columns that were not pertinent to our analysis. We then filtered out other observations that did not directly deal with the data we are exploring. We are looking for cause of death to bee colonies and how they are affected by mites and climate change so we wanted to single out data that represented the losses so we can explore the different states by year and determine how the colonies were affected.\n\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(knitr)\n\n\nlibrary(here)\n\n\n# Install and load the here package\n#install.packages(\"here\")\nlibrary(here)\n\nhere()\n\n[1] \"C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/LeonelSalazar-P2-Portfolio\"\n\n# Create a 'data' directory within the project\ndir.create(here(\"data\"))\n\nWarning in dir.create(here(\"data\")): 'C:\\Users\\Leonel\\Desktop\\MSDA\\MS Data\nAnalytics\\Current Class\\DA 6833\\Practicum 2\nGithub\\LeonelSalazar-P2-Portfolio\\data' already exists\n\n# Read the CSV file\ndata &lt;- read.csv(here(\"Databystate.csv\"))\n\n\n#data &lt;- read.csv(\"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II #Repository/P2-Practicum-II-Portfolio-EdwardCruz/DatabyState.csv\")\n\n\n# Select all columns except 3, 6, and 9\nData_Clean &lt;- dplyr::select(data, -c(3, 6, 9))\n\n\n# Output cleaned data file to a csv file.\n\nwrite.csv(Data_Clean, \"Data_Clean.csv\", row.names = FALSE)\n\n#write.csv(Data_Clean, \"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II #Repository/P2-Practicum-II-Portfolio-EdwardCruz/docs/Databystate_Clean.csv\")\n\n\n# Assuming your data frame is named \"data\"\n\n# Filter for rows where \"Loss\" or \"Deadout\" is present in any column (case-insensitive)\n\nlibrary(stringr)  # Load stringr package for regular expressions\ndata_filtered &lt;- Data_Clean[rowSums(sapply(data, grepl, pattern = c(\"Loss\"), ignore.case = TRUE)) &gt; 0, ]\n\n\n# Output cleaned data file to a csv file.\n\nwrite.csv(data_filtered, \"Data_Filtered.csv\", row.names = FALSE)\n\n#write.csv(Data_Clean, \"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II #Repository/P2-Practicum-II-Portfolio-EdwardCruz/docs/Databystate_Filtered.csv\")\n\n\n# View data str to see what class they are.\n\nstr(data_filtered)\n\n'data.frame':   718 obs. of  6 variables:\n $ Year      : int  2017 2017 2017 2017 2017 2017 2017 2017 2017 2017 ...\n $ Period    : chr  \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" ...\n $ State     : chr  \"ALABAMA\" \"ARIZONA\" \"ARKANSAS\" \"CALIFORNIA\" ...\n $ State.ANSI: int  1 4 5 6 8 9 12 13 15 16 ...\n $ Data.Item : chr  \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" ...\n $ Value     : chr  \"250\" \"2,600\" \"180\" \"19,000\" ...\n\n\n\n3.3.1 Boxplot of Value by Year and Data Item\nThe third image is a boxplot comparing the values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” from 2015 to 2017. The boxplot provides insights into: - The central tendency and spread of losses due to both disorders. - Presence of outliers indicates that there are occasional, significantly higher losses. - Comparative analysis shows that both types of losses have varying distributions each year.\nThis indicates that while both types of losses are present each year, the magnitude and frequency of extreme loss events can differ, suggesting variability in the factors contributing to colony losses.\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(here)\n\nstr(data_filtered)\n\n'data.frame':   718 obs. of  6 variables:\n $ Year      : int  2017 2017 2017 2017 2017 2017 2017 2017 2017 2017 ...\n $ Period    : chr  \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" \"JAN THRU MAR\" ...\n $ State     : chr  \"ALABAMA\" \"ARIZONA\" \"ARKANSAS\" \"CALIFORNIA\" ...\n $ State.ANSI: int  1 4 5 6 8 9 12 13 15 16 ...\n $ Data.Item : chr  \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" \"LOSS, COLONY COLLAPSE DISORDER\" ...\n $ Value     : chr  \"250\" \"2,600\" \"180\" \"19,000\" ...\n\n# Load the dataset\ndata_filtered &lt;- read.csv(here::here(\"Data_Filtered.csv\"), stringsAsFactors = FALSE)\n\n# Convert 'Value' to numeric\ndata_filtered$Value &lt;- as.numeric(gsub(\",\", \"\", data_filtered$Value))\n\n# Handle missing values by replacing NAs with the median value\ndata_filtered$Value[is.na(data_filtered$Value)] &lt;- median(data_filtered$Value, na.rm = TRUE)\n\n# Boxplot of Value by Year and Data.Item\nggplot(data_filtered, aes(x = factor(Year), y = Value, fill = Data.Item)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Boxplot of Value by Year and Data.Item\", x = \"Year\", y = \"Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n3.3.2 Scatterplot of Value by State ANSI\nThe fourth image is a scatterplot showing values for different states (ANSI coded) across the years 2015 to 2017. Key points include: - Each color represents a different year (2015: Red, 2016: Green, 2017: Blue). - The scatterplot reveals the distribution of values across states and highlights any trends or patterns over the three years.\nThis scatterplot indicates that while some states experience consistently high or low values, others show significant variability year over year. This could suggest regional differences in factors affecting bee colony health.\n\n# Scatterplot of Value by State.ANSI\nggplot(data_filtered, aes(x = State.ANSI, y = Value, color = factor(Year))) +\n  geom_point() +\n  labs(title = \"Scatterplot of Value by State.ANSI\", x = \"State.ANSI\", y = \"Value\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n3.3.3 Boxplot of Value by Period and Data Item\nThe fifth image is a boxplot comparing the values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” across different periods of the year: - APR THRU JUN - JAN THRU MAR - JUL THRU SEP - OCT THRU DEC\nKey insights include: - Seasonal trends in colony losses, with some periods showing higher median losses or more variability. - Outliers indicate extreme loss events occurring in specific periods.\nThis seasonal analysis suggests that certain times of the year are more prone to higher losses, potentially due to environmental factors, resource availability, or management practices.\n\n# Load necessary library\nlibrary(ggplot2)\nlibrary(scales)\n\n\n# Assuming data_filtered is already loaded and has the required columns\n\n# Create the plot\np &lt;- ggplot(data_filtered, aes(x = Period, y = Value, fill = Data.Item)) +\n  geom_boxplot() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Boxplot of Value by Period and Data.Item\", x = \"Period\", y = \"Value\")\n\n# Print the plot\nprint(p)\n\n\n\n\n\n\n\n\n\n\n3.3.4 Boxplot of Value by Period and Data Item\nThe fifth image is a boxplot comparing the values for “LOSS, COLONY COLLAPSE DISORDER” and “LOSS, DEADOUT” across different periods of the year: - APR THRU JUN - JAN THRU MAR - JUL THRU SEP - OCT THRU DEC\nKey insights include: - Seasonal trends in colony losses, with some periods showing higher median losses or more variability. - Outliers indicate extreme loss events occurring in specific periods.\nThis seasonal analysis suggests that certain times of the year are more prone to higher losses, potentially due to environmental factors, resource availability, or management practices.\n\n\n3.3.5 Overall Analysis\n\nThe composition of honey indicates its high sugar content, essential for energy but also highlighting the presence of beneficial components like enzymes and vitamins.\nThe spread of Varroa mites map highlights the widespread and growing impact of these pests over time, emphasizing the need for ongoing management and control efforts.\nThe boxplots and scatterplots provide a detailed view of the variability and trends in colony losses due to different factors, both over time and across different regions. These plots suggest that while losses are a consistent issue, their magnitude and causes can vary widely, pointing to the need for tailored strategies to address colony health.\n\nThese visualizations collectively provide a comprehensive overview of the challenges faced by bee colonies, from composition and health to external threats like Varroa mites and seasonal variations in losses.\n\n\n3.3.6 VARROA MITE EXPOSED\n\n\n\n\n\n\n\n3.3.7 VARROA MITE\n\n\n\n\n\n\n# Load necessary libraries\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(reshape2)\n\nWarning: package 'reshape2' was built under R version 4.3.3\n\n\n\nAttaching package: 'reshape2'\n\n\nThe following object is masked from 'package:tidyr':\n\n    smiths\n\nlibrary(cluster)\n\n\nAttaching package: 'cluster'\n\n\nThe following object is masked from 'package:maps':\n\n    votes.repub\n\nlibrary(car)\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:purrr':\n\n    some\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\nlibrary(factoextra)\n\nWarning: package 'factoextra' was built under R version 4.3.3\n\n\nWelcome! Want to learn more? See two factoextra-related books at https://goo.gl/ve3WBa\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\nWarning: package 'rpart.plot' was built under R version 4.3.3\n\nlibrary(randomForest)\n\nWarning: package 'randomForest' was built under R version 4.3.3\n\n\nrandomForest 4.7-1.1\n\n\nType rfNews() to see new features/changes/bug fixes.\n\n\n\nAttaching package: 'randomForest'\n\n\nThe following object is masked from 'package:dplyr':\n\n    combine\n\n\nThe following object is masked from 'package:ggplot2':\n\n    margin\n\nlibrary(e1071)\n\nWarning: package 'e1071' was built under R version 4.3.3\n\n\n\n# Load your dataset\n# Assuming your data frame is named 'data_hcny'\n\ndata_hcny &lt;- read.csv(here(\"hcny_CleanDraft.csv\"))\n\n\n#data_hcny &lt;- read.csv(\"C:/Users/Leonel/Desktop/MSDA/MS Data Analytics/Current Class/DA 6833/Practicum 2 Github/leonelsalazar-P2-portfolio/Group Project/hcnydata_cleaned.csv\")\n\ndata_clean &lt;- na.omit(data_hcny)\n\n\n# Descriptive Statistics\nprint(\"Descriptive Statistics:\")\n\n[1] \"Descriptive Statistics:\"\n\nsummary(data_clean)\n\n    state            varroa_mites    other_pests       disease      \n Length:11          Min.   : 8.00   Min.   : 1.70   Min.   : 0.100  \n Class :character   1st Qu.:13.45   1st Qu.: 3.20   1st Qu.: 0.750  \n Mode  :character   Median :26.80   Median : 6.40   Median : 1.000  \n                    Mean   :32.41   Mean   :11.55   Mean   : 6.718  \n                    3rd Qu.:48.85   3rd Qu.:11.85   3rd Qu.: 4.600  \n                    Max.   :67.20   Max.   :42.30   Max.   :47.800  \n   pesticides        other          unknown      \n Min.   : 0.50   Min.   : 0.50   Min.   : 1.100  \n 1st Qu.: 1.70   1st Qu.: 1.05   1st Qu.: 2.900  \n Median : 5.70   Median : 3.40   Median : 4.400  \n Mean   :10.34   Mean   :10.51   Mean   : 8.718  \n 3rd Qu.:11.30   3rd Qu.:11.35   3rd Qu.: 8.100  \n Max.   :49.20   Max.   :48.10   Max.   :46.800  \n\nstr(data_clean)\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n# Visualizations\n\n# Bar Plot for varroa_mites by State\nggplot(data_clean, aes(x = state, y = varroa_mites)) +\n  geom_bar(stat = \"identity\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Varroa Mites by State\", y = \"Percentage\", x = \"State\")\n\n\n\n\n\n\n\n\n\nstr(data_clean)\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n# Stacked Bar Plot\ndata_long &lt;- data_clean %&gt;%\n  gather(key = \"factor\", value = \"percentage\", -state)\n\nggplot(data_long, aes(x = state, y = percentage, fill = factor)) +\n  geom_bar(stat = \"identity\") +\n theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Factors Affecting Bees by State\", y = \"Percentage\", x = \"State\")\n\n\n\n\n\n\n\n\n\n# Heatmap\ndata_melt &lt;- melt(data_clean, id.vars = \"state\")\n\nggplot(data_melt, aes(x = variable, y = state, fill = value)) +\n  geom_tile() +\n  scale_fill_gradient(low = \"white\", high = \"red\") +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Heatmap of Factors Affecting Bees\", y = \"State\", x = \"Factor\")\n\n\n\n\n\n\n\n\n\n# Pie Chart for the United States\nus_data &lt;- data_clean %&gt;%\n  filter(state == \"United States\") %&gt;%\n  dplyr::select(-state) %&gt;%\n  gather(key = \"factor\", value = \"percentage\")\n\nggplot(us_data, aes(x = \"\", y = percentage, fill = factor)) +\n  geom_bar(width = 1, stat = \"identity\") +\n  coord_polar(\"y\") +\n  theme_void() +\n  labs(title = \"Distribution of Factors Affecting Bees in the United States\")\n\n\n\n\n\n\n\n\n\n# Correlation Analysis\ncor_data &lt;- cor(data_clean[,-1])\nprint(\"Correlation Matrix:\")\n\n[1] \"Correlation Matrix:\"\n\nprint(cor_data)\n\n             varroa_mites other_pests   disease pesticides     other    unknown\nvarroa_mites    1.0000000  0.62115999 0.5907042 0.65228365 0.6085037 0.55340334\nother_pests     0.6211600  1.00000000 0.1180091 0.06810399 0.3449221 0.05806591\ndisease         0.5907042  0.11800909 1.0000000 0.90369098 0.9194785 0.97833233\npesticides      0.6522836  0.06810399 0.9036910 1.00000000 0.8235853 0.86362322\nother           0.6085037  0.34492207 0.9194785 0.82358532 1.0000000 0.86993151\nunknown         0.5534033  0.05806591 0.9783323 0.86362322 0.8699315 1.00000000\n\n\n\n# Assumption Checks for Descriptive Analysis\nprint(\"Assumption Checks:\")\n\n[1] \"Assumption Checks:\"\n\n\n\n# Normality check\nshapiro_results &lt;- lapply(data_clean[-1], function(column) shapiro.test(column))\nprint(\"Shapiro-Wilk Test for Normality:\")\n\n[1] \"Shapiro-Wilk Test for Normality:\"\n\nprint(shapiro_results)\n\n$varroa_mites\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.87839, p-value = 0.09925\n\n\n$other_pests\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.72499, p-value = 0.0009831\n\n\n$disease\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.51395, p-value = 2.235e-06\n\n\n$pesticides\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.70512, p-value = 0.0005444\n\n\n$other\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.70797, p-value = 0.0005924\n\n\n$unknown\n\n    Shapiro-Wilk normality test\n\ndata:  column\nW = 0.55542, p-value = 7.156e-06\n\n\n\n# Homogeneity of variances\n\nlevene_results &lt;- leveneTest(varroa_mites ~ state, data = data_clean)\n\nWarning in leveneTest.default(y = y, group = group, ...): group coerced to\nfactor.\n\nprint(\"Levene's Test for Homogeneity of Variances:\")\n\n[1] \"Levene's Test for Homogeneity of Variances:\"\n\nprint(levene_results)\n\nLevene's Test for Homogeneity of Variance (center = median)\n      Df F value Pr(&gt;F)\ngroup 10     NaN    NaN\n       0               \n\n\n\n# Cluster Analysis\ndata_cluster &lt;- data_clean %&gt;%\n  filter(state != \"United States\") %&gt;%\n  dplyr::select(-state)\n\nhc &lt;- hclust(dist(data_cluster), method = \"complete\")\nplot(hc, labels = data_clean$state[data_clean$state != \"United States\"], main = \"Hierarchical Clustering of States\")\n\n\n\n\n\n\n\n\n\n# Principal Component Analysis (PCA)\ndata_pca &lt;- data_clean %&gt;%\n  filter(state != \"United States\") %&gt;%\n  dplyr::select(-state) %&gt;%\n  scale()\n\n\npca_result &lt;- prcomp(data_pca, center = TRUE, scale. = TRUE)\nsummary(pca_result)\n\nImportance of components:\n                          PC1    PC2    PC3     PC4     PC5     PC6\nStandard deviation     2.0647 1.1246 0.5666 0.34369 0.15432 0.09672\nProportion of Variance 0.7105 0.2108 0.0535 0.01969 0.00397 0.00156\nCumulative Proportion  0.7105 0.9213 0.9748 0.99447 0.99844 1.00000\n\n\n\nfviz_pca_var(pca_result, col.var = \"contrib\", gradient.cols = c(\"#00AFBB\", \"#E7B800\", \"#FC4E07\"))\n\n\n\n\n\n\n\n\n\nstr(data_clean)\n\n'data.frame':   11 obs. of  7 variables:\n $ state       : chr  \"Kansas\" \"Kentucky\" \"Michigan\" \"Mississippi\" ...\n $ varroa_mites: num  35.5 8 16.5 12.6 13.1 26.8 65.3 13.8 46.8 67.2 ...\n $ other_pests : num  2 2.9 1.7 3.5 6.4 3.9 33.5 7.2 42.3 9.8 ...\n $ disease     : num  0.1 1 1.8 1 0.8 0.6 0.7 2.7 10.9 47.8 ...\n $ pesticides  : num  21.7 1.3 2.1 3.2 0.5 0.5 5.7 6.9 12.1 49.2 ...\n $ other       : num  3.4 0.5 3.3 9.1 4.8 0.6 1 1.1 30.1 48.1 ...\n $ unknown     : num  2 5.6 10.3 2.4 3.4 3.7 4.4 1.1 10.2 46.8 ...\n - attr(*, \"na.action\")= 'omit' Named int [1:29] 3 4 5 6 8 11 13 14 15 16 ...\n  ..- attr(*, \"names\")= chr [1:29] \"3\" \"4\" \"5\" \"6\" ...\n\n\n\n# Support Vector Machine (SVM)\nsvm_model &lt;- svm(varroa_mites ~ other_pests + disease + pesticides + other + unknown, data = data_clean)\nsummary(svm_model)\n\n\nCall:\nsvm(formula = varroa_mites ~ other_pests + disease + pesticides + \n    other + unknown, data = data_clean)\n\n\nParameters:\n   SVM-Type:  eps-regression \n SVM-Kernel:  radial \n       cost:  1 \n      gamma:  0.2 \n    epsilon:  0.1 \n\n\nNumber of Support Vectors:  10\n\n\n\n# Assuming predictions and data_clean$varroa_mites are already created\n\n# Example data\ndata_clean &lt;- data.frame(\n  Varroa_Mites = c(5, 10, 15, 20),\n  other_variable = c(2, 4, 6, 8)\n)\n\n# Fit a linear model\nmodel &lt;- lm(Varroa_Mites ~ other_variable, data = data_clean)\n\n# Generate predictions\npredictions &lt;- predict(model, newdata = data_clean)\n\n\n# Plot the data\nplot(predictions, data_clean$varroa_mites, \n     xlab = \"Predictions\", \n     ylab = \"Varroa Mites\", \n     main = \"Predictions vs Varroa Mites\",\n     las = 1, # makes y-axis labels horizontal\n     cex.lab = 1.2, # increases axis labels size\n     cex.axis = 1.2) # increases tick labels size\n\n\n\n\n\n\n\n\n\n\n3.3.8 Honey Bee Collecting Pollen\n\n\n\n\n\n\n\n3.3.9 Honey Bee with exposed bloated Varroa Mite\n\n\n\n\n\n\n# Write the cleaned data to a new CSV file\n\n\n# Assuming your dataset is named data_hcny\ndata_hcny_clean &lt;- data_hcny %&gt;% drop_na()\n\n\nwrite.csv(data_hcny_clean, here(\"hcnydata_cleaned.csv\"), row.names = FALSE)\n\n#write.csv(hcnydata_cleaned, \"C:/Users/ecruz/OneDrive/Documents/UTSA - Data Science Program/Semester Classes/Practicum II Repository/P2-Practicum-II-Portfolio-EdwardCruz/hcny_CleanDraft.csv\", row.names = FALSE)"
  },
  {
    "objectID": "starter-analysis-exercise/products/report/manuscript_final-2.html#full-analysis",
    "href": "starter-analysis-exercise/products/report/manuscript_final-2.html#full-analysis",
    "title": "Honey Bee Colonies Impacted by Varroa, American Foulbrood and Global Warming",
    "section": "3.4 Full analysis",
    "text": "3.4 Full analysis\n##The full analysis is still pending###"
  }
]