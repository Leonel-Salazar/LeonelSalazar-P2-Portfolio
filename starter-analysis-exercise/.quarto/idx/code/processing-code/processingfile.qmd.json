{"title":"An example cleaning script","markdown":{"yaml":{"title":"An example cleaning script","author":"Leonel Salazar","date":"2023-01-03","output":"html_document"},"headingText":"Processing script","containsRefs":false,"markdown":"\n\n\n\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\n# Setup\n\nLoad needed packages. make sure they are installed.\n\n```{r}\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n```\n\n\n# Data loading\n\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so:\npackage::function() that's not required one could just call the function specifying the package makes it clearer where the function \"lives\",\nbut it adds typing. You can do it either way.\n\n```{r}\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location <- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata <- readxl::read_excel(data_location)\n```\n\n\n# Check data\n\nFirst we can look at the codebook\n\n```{r}\ncodebook <- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n```\n\n\nSeveral ways of looking at the data\n\n```{r}\ndplyr::glimpse(rawdata)\nsummary(rawdata)\nhead(rawdata)\nskimr::skim(rawdata)\n```\n\n\n\n# Cleaning\n\nBy inspecting the data as done above, we find some problems that need addressing:\n\nFirst, there is an entry for height which says \"sixty\" instead of a number. \nDoes that mean it should be a numeric 60? It somehow doesn't make sense since the weight is 60kg, which can't happen for a 60cm person (a baby).\nSince we don't know how to fix this, we might decide to remove the person. This \"sixty\" entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn't very meaningful. So let's fix that first.\n\n```{r}\nd1 <- rawdata %>% dplyr::filter( Height != \"sixty\" ) %>% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\nhist(d1$Height)\n```\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don't know, we might need to remove this person, which we'll do here.\n\n```{r}\nd2 <- d1 %>% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n```\n\nHeight values seem ok now.\n\nNow let's look at the `Weight` variable. There is a person with weight of 7000, which is impossible, and one person with missing weight.\nTo be able to analyze the data, we'll remove those individuals as well.\n\n```{r}\nd3 <- d2 %>%  dplyr::filter(Weight != 7000) %>% tidyr::drop_na()\nskimr::skim(d3)\n```\n\nNow checking the `Gender` variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\n```{r}\nd3$Gender <- as.factor(d3$Gender)  \nskimr::skim(d3)\n```\n\n\nNow we see that there is another NA, but it's not `NA` from R, instead it was loaded as character and is now considered as a category.\nWell proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I'm also using droplevels() to get rid of it.\n\n```{r}\nd4 <- d3 %>% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %>% droplevels()\nskimr::skim(d4)\n```\n\n\nAll done, data is clean now. \n\nLet's assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\n```{r}\nprocesseddata <- d4\n```\n\n\n# Save data \n\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. \nThis preserves coding like factors, characters, numeric, etc.  If you save as CSV, that information would get lost.\nHowever, CSV is better for sharing with others since it's plain text. If you do CSV, you might want to write down somewhere what each variable is.\n\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\n```{r}\nsave_data_location <- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n```\n\nNote the use of the `here` package and `here` command to specify a path relative to the main project directory, that is the folder that contains the `.Rproj` file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\n\n# Notes\n\nRemoving anyone observation with \"faulty\" or missing data is one approach. It's often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information).\n\n\n\n","srcMarkdownNoYaml":"\n\n\n# Processing script\n\nThis Quarto file contains a mix of code and explanatory text to illustrate a simple data processing/cleaning setup.\n\n\n# Setup\n\nLoad needed packages. make sure they are installed.\n\n```{r}\nlibrary(readxl) #for loading Excel files\nlibrary(dplyr) #for data processing/cleaning\nlibrary(tidyr) #for data processing/cleaning\nlibrary(skimr) #for nice visualization of data \nlibrary(here) #to set paths\n```\n\n\n# Data loading\n\nNote that for functions that come from specific packages (instead of base R), I often specify both package and function like so:\npackage::function() that's not required one could just call the function specifying the package makes it clearer where the function \"lives\",\nbut it adds typing. You can do it either way.\n\n```{r}\n# path to data\n# note the use of the here() package and not absolute paths\ndata_location <- here::here(\"starter-analysis-exercise\",\"data\",\"raw-data\",\"exampledata2.xlsx\")\nrawdata <- readxl::read_excel(data_location)\n```\n\n\n# Check data\n\nFirst we can look at the codebook\n\n```{r}\ncodebook <- readxl::read_excel(data_location, sheet =\"Codebook\")\nprint(codebook)\n```\n\n\nSeveral ways of looking at the data\n\n```{r}\ndplyr::glimpse(rawdata)\nsummary(rawdata)\nhead(rawdata)\nskimr::skim(rawdata)\n```\n\n\n\n# Cleaning\n\nBy inspecting the data as done above, we find some problems that need addressing:\n\nFirst, there is an entry for height which says \"sixty\" instead of a number. \nDoes that mean it should be a numeric 60? It somehow doesn't make sense since the weight is 60kg, which can't happen for a 60cm person (a baby).\nSince we don't know how to fix this, we might decide to remove the person. This \"sixty\" entry also turned all Height entries into characters instead of numeric. That conversion to character also means that our summary function isn't very meaningful. So let's fix that first.\n\n```{r}\nd1 <- rawdata %>% dplyr::filter( Height != \"sixty\" ) %>% \n                  dplyr::mutate(Height = as.numeric(Height))\nskimr::skim(d1)\nhist(d1$Height)\n```\n\nNow we see that there is one person with a height of 6. That could be a typo, or someone mistakenly entered their height in feet. Since we unfortunately don't know, we might need to remove this person, which we'll do here.\n\n```{r}\nd2 <- d1 %>% dplyr::mutate( Height = replace(Height, Height==\"6\",round(6*30.48,0)) )\nskimr::skim(d2)\n```\n\nHeight values seem ok now.\n\nNow let's look at the `Weight` variable. There is a person with weight of 7000, which is impossible, and one person with missing weight.\nTo be able to analyze the data, we'll remove those individuals as well.\n\n```{r}\nd3 <- d2 %>%  dplyr::filter(Weight != 7000) %>% tidyr::drop_na()\nskimr::skim(d3)\n```\n\nNow checking the `Gender` variable. Gender should be a categorical/factor variable but is loaded as character. We can fix that with simple base R code to mix things up.\n\n```{r}\nd3$Gender <- as.factor(d3$Gender)  \nskimr::skim(d3)\n```\n\n\nNow we see that there is another NA, but it's not `NA` from R, instead it was loaded as character and is now considered as a category.\nWell proceed here by removing that individual with that NA entry. Since this keeps an empty category for Gender, I'm also using droplevels() to get rid of it.\n\n```{r}\nd4 <- d3 %>% dplyr::filter( !(Gender %in% c(\"NA\",\"N\")) ) %>% droplevels()\nskimr::skim(d4)\n```\n\n\nAll done, data is clean now. \n\nLet's assign at the end to some final variable, this makes it easier to add further cleaning steps above.\n\n```{r}\nprocesseddata <- d4\n```\n\n\n# Save data \n\nFinally, we save the clean data as RDS file. I suggest you save your processed and cleaned data as RDS or RDA/Rdata files. \nThis preserves coding like factors, characters, numeric, etc.  If you save as CSV, that information would get lost.\nHowever, CSV is better for sharing with others since it's plain text. If you do CSV, you might want to write down somewhere what each variable is.\n\nSee here for some suggestions on how to store your processed data:\nhttp://www.sthda.com/english/wiki/saving-data-into-r-data-format-rds-and-rdata\n\n```{r}\nsave_data_location <- here::here(\"starter-analysis-exercise\",\"data\",\"processed-data\",\"processeddata.rds\")\nsaveRDS(processeddata, file = save_data_location)\n```\n\nNote the use of the `here` package and `here` command to specify a path relative to the main project directory, that is the folder that contains the `.Rproj` file. Always use this approach instead of hard-coding file paths that only exist on your computer.\n\n\n\n# Notes\n\nRemoving anyone observation with \"faulty\" or missing data is one approach. It's often not the best. based on your question and your analysis approach, you might want to do cleaning differently (e.g. keep observations with some missing information).\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":false,"output-file":"processingfile.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.555","theme":"Zephyr","highlight":"zenburn","title":"An example cleaning script","author":"Leonel Salazar","date":"2023-01-03"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}